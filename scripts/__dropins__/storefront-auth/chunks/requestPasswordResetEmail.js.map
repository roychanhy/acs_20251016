{"version":3,"file":"requestPasswordResetEmail.js","sources":["/@dropins/storefront-auth/src/data/transforms/transform-password-reset-email.ts","/@dropins/storefront-auth/src/api/requestPasswordResetEmail/graphql/requestPasswordResetEmail.graphql.ts","/@dropins/storefront-auth/src/api/requestPasswordResetEmail/requestPasswordResetEmail.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { PasswordResetEmailResponse } from '@/auth/types';\nimport { PasswordResetEmailModel } from '../models';\n\nexport const transformPasswordResetEmail = (\n  response: PasswordResetEmailResponse\n): PasswordResetEmailModel => {\n  let message: string = '';\n\n  if (response?.errors?.length)\n    message = response?.errors[0]?.message as unknown as string;\n\n  return {\n    message,\n    success: Boolean(response?.data?.requestPasswordResetEmail),\n  };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const REQUEST_PASSWORD_RESET_EMAIL = /* GraphQL */ `\n  mutation REQUEST_PASSWORD_RESET_EMAIL($email: String!) {\n    requestPasswordResetEmail(email: $email)\n  }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { handleNetworkError } from '@/auth/lib/network-error';\nimport { fetchGraphQl } from '../fetch-graphql';\nimport { REQUEST_PASSWORD_RESET_EMAIL } from './graphql/requestPasswordResetEmail.graphql';\nimport { transformPasswordResetEmail } from '@/auth/data/transforms';\nimport { PasswordResetEmailModel } from '@/auth/data/models';\nimport { setReCaptchaToken } from '@/auth/lib/setReCaptchaToken';\n\nexport const requestPasswordResetEmail = async (\n  email: string\n): Promise<PasswordResetEmailModel> => {\n  await setReCaptchaToken();\n\n  return await fetchGraphQl(REQUEST_PASSWORD_RESET_EMAIL, {\n    method: 'POST',\n    variables: { email },\n  })\n    .then((response) => {\n      return transformPasswordResetEmail(response);\n    })\n    .catch(handleNetworkError);\n};\n"],"names":["transformPasswordResetEmail","response","message","_a","_b","_c","REQUEST_PASSWORD_RESET_EMAIL","requestPasswordResetEmail","email","setReCaptchaToken","fetchGraphQl","handleNetworkError"],"mappings":"yFAoBa,MAAAA,EACXC,GAC4B,WAC5B,IAAIC,EAAkB,GAEtB,OAAIC,EAAAF,GAAA,YAAAA,EAAU,SAAV,MAAAE,EAAkB,SACVD,GAAAE,EAAAH,GAAA,YAAAA,EAAU,OAAO,KAAjB,YAAAG,EAAqB,SAE1B,CACL,QAAAF,EACA,QAAS,IAAQG,EAAAJ,GAAA,YAAAA,EAAU,OAAV,MAAAI,EAAgB,0BACnC,CACF,ECfaC,EAA6C;AAAA;AAAA;AAAA;AAAA,ECO7CC,EAA4B,MACvCC,IAEA,MAAMC,EAAkB,EAEjB,MAAMC,EAAaJ,EAA8B,CACtD,OAAQ,OACR,UAAW,CAAE,MAAAE,CAAM,CAAA,CACpB,EACE,KAAMP,GACED,EAA4BC,CAAQ,CAC5C,EACA,MAAMU,CAAkB"}