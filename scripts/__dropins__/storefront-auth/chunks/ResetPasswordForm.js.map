{"version":3,"file":"ResetPasswordForm.js","sources":["../../node_modules/@adobe-commerce/elsie/src/icons/ChevronDown.svg","/@dropins/storefront-auth/src/hooks/components/useResetPasswordForm.tsx","/@dropins/storefront-auth/src/components/ResetPasswordForm/ResetPasswordForm.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgChevronDown = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M7.74512 9.87701L12.0001 14.132L16.2551 9.87701\", stroke: \"currentColor\", strokeWidth: 1.5, strokeLinecap: \"square\", strokeLinejoin: \"round\" }));\nexport default SvgChevronDown;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { requestPasswordResetEmail } from '@/auth/api';\nimport { checkIsFunction } from '@/auth/lib/checkIsFunction';\nimport { getFormValues } from '@/auth/lib/getFormValues';\nimport { UseResetPasswordFormProps } from '@/auth/types';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { useCallback, useState } from 'preact/hooks';\nimport { validateEmail } from '@/auth/lib/validationFields';\n\nexport const useResetPasswordForm = ({\n  routeSignIn,\n  onErrorCallback,\n  onSuccessCallback,\n  setActiveComponent,\n  handleSetInLineAlertProps,\n}: UseResetPasswordFormProps) => {\n  const translations = useText({\n    successPasswordResetEmailNotification:\n      'Auth.Notification.successPasswordResetEmailNotification',\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitResetPassword = useCallback(\n    async (event: any): Promise<void> => {\n      event.preventDefault();\n\n      const formValues = getFormValues(event.target);\n\n      if (!validateEmail(formValues?.email)) {\n        return;\n      }\n\n      setIsLoading(true);\n\n      const response = await requestPasswordResetEmail(formValues.email);\n\n      setIsLoading(false);\n\n      if (!response.success) {\n        onErrorCallback?.(response);\n        handleSetInLineAlertProps?.({\n          type: 'error',\n          text: response.message,\n        });\n        return;\n      }\n\n      if (onSuccessCallback) {\n        await onSuccessCallback();\n        return;\n      }\n\n      handleSetInLineAlertProps?.({\n        type: 'success',\n        text: translations.successPasswordResetEmailNotification.replace(\n          '{email}',\n          formValues.email\n        ),\n      });\n    },\n    [\n      handleSetInLineAlertProps,\n      onErrorCallback,\n      onSuccessCallback,\n      translations.successPasswordResetEmailNotification,\n    ]\n  );\n\n  const redirectToSignInPage = useCallback(() => {\n    if (checkIsFunction(setActiveComponent)) {\n      setActiveComponent('signInForm');\n      return;\n    }\n\n    if (checkIsFunction(routeSignIn)) {\n      window.location.href = routeSignIn();\n    }\n  }, [setActiveComponent, routeSignIn]);\n\n  return {\n    isLoading,\n    submitResetPassword,\n    redirectToSignInPage,\n  };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe-commerce/elsie/lib';\nimport '@/auth/components/ResetPasswordForm/ResetPasswordForm.css';\nimport { useResetPasswordForm } from '@/auth/hooks/components/useResetPasswordForm';\nimport { ResetPasswordFormProps } from '@/auth/types';\nimport { ChevronDown as ChevronLeft } from '@adobe-commerce/elsie/icons';\nimport { Form, Button } from '@/auth/components';\nimport { useInLineAlert } from '@/auth/hooks/useInLineAlert';\nimport { Header, InLineAlert } from '@adobe-commerce/elsie/components';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { simplifyTransformAttributesForm } from '@/auth/lib/simplifyTransformAttributesForm';\nimport { DEFAULT__RESET_PASSWORD_EMAIL_FIELD } from '@/auth/configs/defaultCreateUserConfigs';\n\nexport const ResetPasswordForm: FunctionComponent<\n  ResetPasswordFormProps & HTMLAttributes<HTMLDivElement>\n> = ({\n  formSize = 'default',\n  routeSignIn,\n  setActiveComponent,\n  onErrorCallback,\n  onSuccessCallback,\n  ...props\n}) => {\n  const translations = useText({\n    title: 'Auth.ResetPasswordForm.title',\n    buttonPrimary: 'Auth.ResetPasswordForm.buttonPrimary',\n    buttonSecondary: 'Auth.ResetPasswordForm.buttonSecondary',\n    formAriaLabel: 'Auth.ResetPasswordForm.formAriaLabel',\n  });\n\n  const { inLineAlertProps, handleSetInLineAlertProps } = useInLineAlert();\n\n  const { isLoading, submitResetPassword, redirectToSignInPage } =\n    useResetPasswordForm({\n      routeSignIn,\n      setActiveComponent,\n      onErrorCallback,\n      onSuccessCallback,\n      handleSetInLineAlertProps,\n    });\n\n  return (\n    <div\n      {...props}\n      className={classes([\n        'auth-reset-password-form',\n        `auth-reset-password-form--${formSize}`,\n      ])}\n      data-testid=\"resetPasswordForm\"\n    >\n      <Header\n        title={translations.title}\n        divider={false}\n        className=\"auth-reset-password-form__title\"\n      />\n      {inLineAlertProps.text ? (\n        <InLineAlert\n          className=\"auth-reset-password-form__notification\"\n          type={inLineAlertProps.type}\n          variant=\"secondary\"\n          heading={inLineAlertProps.text}\n          icon={inLineAlertProps.icon}\n        />\n      ) : null}\n      <Form\n        aria-labelledby={translations.formAriaLabel}\n        name=\"resetPassword_form\"\n        className=\"auth-reset-password-form__form\"\n        onSubmit={submitResetPassword}\n        loading={isLoading}\n        fieldsConfig={simplifyTransformAttributesForm(\n          DEFAULT__RESET_PASSWORD_EMAIL_FIELD\n        )}\n      >\n        <div className=\"auth-reset-password-form__buttons\">\n          <Button\n            className=\"auth-reset-password-form__buttons--signin\"\n            type=\"button\"\n            variant=\"tertiary\"\n            style={{ padding: '0' }}\n            icon={<ChevronLeft style={{ transform: 'rotate(90deg)' }} />}\n            buttonText={translations.buttonSecondary}\n            enableLoader={false}\n            onClick={redirectToSignInPage}\n          />\n          <Button\n            type=\"submit\"\n            buttonText={translations.buttonPrimary}\n            variant=\"primary\"\n            enableLoader={isLoading}\n          />\n        </div>\n      </Form>\n      <div id=\"requestPasswordResetEmail\" />\n    </div>\n  );\n};\n"],"names":["SvgChevronDown","props","React","useResetPasswordForm","routeSignIn","onErrorCallback","onSuccessCallback","setActiveComponent","handleSetInLineAlertProps","translations","useText","isLoading","setIsLoading","useState","submitResetPassword","useCallback","event","formValues","getFormValues","validateEmail","response","requestPasswordResetEmail","redirectToSignInPage","checkIsFunction","ResetPasswordForm","formSize","inLineAlertProps","useInLineAlert","jsxs","classes","jsx","Header","InLineAlert","Form","simplifyTransformAttributesForm","DEFAULT__RESET_PASSWORD_EMAIL_FIELD","Button","ChevronLeft"],"mappings":"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","x_google_ignoreList":[0]}