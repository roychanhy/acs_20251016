{"version":3,"file":"getCustomerToken.js","sources":["/@dropins/storefront-auth/src/data/transforms/transform-customer-data.ts","/@dropins/storefront-auth/src/api/getCustomerData/graphql/getCustomerData.graphql.ts","/@dropins/storefront-auth/src/api/getCustomerData/getCustomerData.ts","/@dropins/storefront-auth/src/api/getCustomerToken/graphql/getCustomerToken.graphql.ts","/@dropins/storefront-auth/src/api/getCustomerToken/getCustomerToken.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { getCustomerDataResponse } from '@/auth/types';\nimport { CustomerModel } from '../models';\nimport { config } from '@/auth/api';\nimport { merge } from '@adobe-commerce/elsie/lib';\n\nexport const transformCustomerData = (\n  response: getCustomerDataResponse\n): CustomerModel => {\n  const model = {\n    email: response?.data?.customer?.email ?? '',\n    firstName: response?.data?.customer?.firstname ?? '',\n    lastName: response?.data?.customer?.lastname ?? '',\n  };\n\n  // Extend the model merging custom transformer, if provided\n  return merge(\n    model, // default transformer\n    config?.getConfig()?.models?.CustomerModel?.transformer?.(response.data) // custom transformer\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { CUSTOMER_INFORMATION_FRAGMENT } from '@/auth/api/fragments';\n\nexport const GET_CUSTOMER_DATA = /* GraphQL */ `\n  query GET_CUSTOMER_DATA {\n    customer {\n      ...CUSTOMER_INFORMATION_FRAGMENT\n    }\n  }\n  ${CUSTOMER_INFORMATION_FRAGMENT}\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { fetchGraphQl, setFetchGraphQlHeader, config } from '@/auth/api';\nimport { GET_CUSTOMER_DATA } from './graphql/getCustomerData.graphql';\nimport { handleNetworkError } from '@/auth/lib/network-error';\nimport { CustomerModel } from '@/auth/data/models';\nimport { transformCustomerData } from '@/auth/data/transforms';\n\nexport const getCustomerData = async (\n  user_token: string\n): Promise<CustomerModel> => {\n  if (user_token) {\n    const { authHeaderConfig } = config.getConfig();\n\n    setFetchGraphQlHeader(\n      authHeaderConfig.header,\n      authHeaderConfig.tokenPrefix\n        ? `${authHeaderConfig.tokenPrefix} ${user_token}`\n        : user_token\n    );\n  }\n\n  return await fetchGraphQl(GET_CUSTOMER_DATA, {\n    method: 'GET',\n    cache: 'force-cache',\n  })\n    .then((response) => {\n      return transformCustomerData(response);\n    })\n    .catch(handleNetworkError);\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const GET_CUSTOMER_TOKEN = /* GraphQL */ `\n  mutation GET_CUSTOMER_TOKEN($email: String!, $password: String!) {\n    generateCustomerToken(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { handleNetworkError } from '@/auth/lib/network-error';\nimport { fetchGraphQl } from '../fetch-graphql';\nimport { GET_CUSTOMER_TOKEN } from './graphql/getCustomerToken.graphql';\nimport { getCustomerData } from '../getCustomerData';\nimport { InLineAlertInterface } from '@/auth/types';\nimport { events } from '@adobe-commerce/event-bus';\nimport { COOKIE_NAMES } from '@/auth/configs/cookieConfigs';\nimport { getCookiesLifetime } from '@/auth/lib/cookieUtils';\nimport { publishEvents, EventsList } from '@/auth/lib/acdl';\nimport { setReCaptchaToken } from '@/auth/lib/setReCaptchaToken';\n\ninterface getCustomerTokenProps {\n  email: string;\n  password: string;\n  handleSetInLineAlertProps: (value?: InLineAlertInterface) => void;\n  translations: Record<string, string>;\n  onErrorCallback?: (value?: unknown) => void;\n}\n\nexport const getCustomerToken = async ({\n  email,\n  password,\n  translations,\n  onErrorCallback,\n  handleSetInLineAlertProps,\n}: getCustomerTokenProps): Promise<{\n  errorMessage: string;\n  userName: string;\n  userEmail: string;\n}> => {\n  await setReCaptchaToken();\n\n  const response = await fetchGraphQl(GET_CUSTOMER_TOKEN, {\n    method: 'POST',\n    variables: { email, password },\n  }).catch(handleNetworkError);\n\n  if (!response?.data?.generateCustomerToken?.token) {\n    // Fallback error message\n    const defaultErrorMessage = translations.customerTokenErrorMessage;\n    const errorMessage = response?.errors\n      ? response.errors[0].message\n      : defaultErrorMessage;\n\n    onErrorCallback?.(errorMessage);\n    handleSetInLineAlertProps?.({ type: 'error', text: errorMessage });\n\n    return { errorMessage, userName: '' };\n  }\n\n  const userToken = response?.data?.generateCustomerToken?.token;\n\n  const responseCustomer = await getCustomerData(userToken);\n  const userName = responseCustomer?.firstName;\n  const userEmail = responseCustomer?.email;\n\n  if (!userName || !userEmail) {\n    const errorMessage = translations.customerTokenErrorMessage;\n\n    onErrorCallback?.(errorMessage);\n    handleSetInLineAlertProps?.({ type: 'error', text: errorMessage });\n\n    return { errorMessage, userName: '', userEmail: '' };\n  }\n\n  const cookiesLifetime = await getCookiesLifetime();\n\n  document.cookie = `${COOKIE_NAMES.auth_dropin_firstname}=${userName}; path=/; ${cookiesLifetime}; `;\n  document.cookie = `${COOKIE_NAMES.auth_dropin_user_token}=${userToken}; path=/; ${cookiesLifetime}; `;\n\n  events.emit('authenticated', !!userToken);\n\n  publishEvents(EventsList?.SIGN_IN, { ...responseCustomer });\n\n  return { errorMessage: '', userName, userEmail };\n};\n"],"names":["transformCustomerData","response","model","_b","_a","_d","_c","_f","_e","merge","_k","_j","_i","_h","_g","config","GET_CUSTOMER_DATA","CUSTOMER_INFORMATION_FRAGMENT","getCustomerData","user_token","authHeaderConfig","setFetchGraphQlHeader","fetchGraphQl","handleNetworkError","GET_CUSTOMER_TOKEN","getCustomerToken","email","password","translations","onErrorCallback","handleSetInLineAlertProps","setReCaptchaToken","defaultErrorMessage","errorMessage","userToken","responseCustomer","userName","userEmail","cookiesLifetime","getCookiesLifetime","COOKIE_NAMES","events","publishEvents","EventsList"],"mappings":"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"}