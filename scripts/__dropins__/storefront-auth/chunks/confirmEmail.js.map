{"version":3,"file":"confirmEmail.js","sources":["/@dropins/storefront-auth/src/api/confirmEmail/graphql/confirmEmail.graphql.ts","/@dropins/storefront-auth/src/api/confirmEmail/confirmEmail.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const CONFIRM_EMAIL = /* GraphQL */ `\n  mutation CONFIRM_EMAIL($email: String!, $confirmation_key: String!) {\n    confirmEmail(\n      input: { email: $email, confirmation_key: $confirmation_key }\n    ) {\n      customer {\n        email\n      }\n    }\n  }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { confirmEmailResponse, confirmEmailProps } from '@/auth/types';\nimport { fetchGraphQl } from '../fetch-graphql';\nimport { CONFIRM_EMAIL } from './graphql/confirmEmail.graphql';\nimport { handleNetworkError } from '@/auth/lib/network-error';\n\nexport const confirmEmail = async ({\n  customerEmail,\n  customerConfirmationKey,\n}: confirmEmailProps): Promise<confirmEmailResponse | undefined> => {\n  return await fetchGraphQl(CONFIRM_EMAIL, {\n    method: 'POST',\n    variables: {\n      email: customerEmail,\n      confirmation_key: customerConfirmationKey,\n    },\n  }).catch(handleNetworkError);\n};\n"],"names":["CONFIRM_EMAIL","confirmEmail","customerEmail","customerConfirmationKey","fetchGraphQl","handleNetworkError"],"mappings":"8CAiBa,MAAAA,EAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECK9BC,EAAe,MAAO,CACjC,cAAAC,EACA,wBAAAC,CACF,IACS,MAAMC,EAAaJ,EAAe,CACvC,OAAQ,OACR,UAAW,CACT,MAAOE,EACP,iBAAkBC,CAAA,CACpB,CACD,EAAE,MAAME,CAAkB"}