{"version":3,"mappings":"m5CAuBMA,EAAoBC,EACxB,UAAM,OAAO,oBAAqC,KACpD,EACMC,EAAaD,EAAK,IAAME,EAAA,WAAO,qBAA8B,EAAC,KAC9DC,EAAaH,EAAK,IAAME,EAAA,WAAO,qBAA8B,EAAC,KAEvDE,EAA2C,CAAC,CACvD,YAAAC,EAAc,aACd,iBAAAC,EACA,iBAAAC,EACA,wBAAAC,CACF,IAAM,CACJ,KAAM,CAACC,EAAiBC,CAAkB,EACxCC,EAA8BN,CAAW,EAErCO,EAAkBC,EACtB,KAAO,CACL,WACEC,EAACb,EAAA,CACC,mBAAAS,EACC,GAAGJ,CAAA,CACN,EAEF,WACEQ,EAACX,EAAA,CACC,mBAAAO,EACC,GAAGH,CAAA,CACN,EAEF,kBACEO,EAACf,EAAA,CACC,mBAAAW,EACC,GAAGF,CAAA,EACN,GAGJ,CACEA,EACAF,EACAC,EACAG,CAAA,CAEJ,EAEA,SACG,MACC,UAAAI,EAACC,GAAS,SAAUD,EAACE,GAAe,eAAgBP,CAAA,CAAiB,EACnE,SAAAK,EAAC,OAAI,UAAU,eAAgB,WAAgBL,CAAe,EAAE,EAClE,CACF,EAEJ","names":["ResetPasswordForm","lazy","SignInForm","__vitePreload","SignUpForm","AuthCombine","defaultView","signInFormConfig","signUpFormConfig","resetPasswordFormConfig","activeComponent","setActiveComponent","useState","renderComponent","useMemo","jsx","Suspense","SkeletonLoader"],"ignoreList":[],"sources":["/@dropins/storefront-auth/src/containers/AuthCombine/AuthCombine.tsx"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { Suspense, lazy } from 'preact/compat';\nimport { Container } from '@adobe-commerce/elsie/lib';\nimport { useMemo, useState } from 'preact/hooks';\nimport { AuthCombineProps, activeComponentType } from '@/auth/types';\nimport SkeletonLoader from '@/auth/components/SkeletonLoader';\n\nconst ResetPasswordForm = lazy(\n  () => import('@/auth/components/ResetPasswordForm')\n);\nconst SignInForm = lazy(() => import('@/auth/components/SignInForm'));\nconst SignUpForm = lazy(() => import('@/auth/components/SignUpForm'));\n\nexport const AuthCombine: Container<AuthCombineProps> = ({\n  defaultView = 'signInForm',\n  signInFormConfig,\n  signUpFormConfig,\n  resetPasswordFormConfig,\n}) => {\n  const [activeComponent, setActiveComponent] =\n    useState<activeComponentType>(defaultView);\n\n  const renderComponent = useMemo(\n    () => ({\n      signInForm: (\n        <SignInForm\n          setActiveComponent={setActiveComponent}\n          {...signInFormConfig}\n        />\n      ),\n      signUpForm: (\n        <SignUpForm\n          setActiveComponent={setActiveComponent}\n          {...signUpFormConfig}\n        />\n      ),\n      resetPasswordForm: (\n        <ResetPasswordForm\n          setActiveComponent={setActiveComponent}\n          {...resetPasswordFormConfig}\n        />\n      ),\n    }),\n    [\n      resetPasswordFormConfig,\n      signInFormConfig,\n      signUpFormConfig,\n      setActiveComponent,\n    ]\n  );\n\n  return (\n    <div>\n      <Suspense fallback={<SkeletonLoader activeSkeleton={activeComponent} />}>\n        <div className=\"auth-combine\">{renderComponent[activeComponent]}</div>\n      </Suspense>\n    </div>\n  );\n};\n"],"file":"containers/AuthCombine.js"}