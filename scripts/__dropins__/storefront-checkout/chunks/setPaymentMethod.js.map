{"version":3,"file":"setPaymentMethod.js","sources":["/@dropins/storefront-checkout/src/api/setPaymentMethod/graphql/setPaymentMethod.graphql.ts","/@dropins/storefront-checkout/src/api/setPaymentMethod/setPaymentMethod.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { CHECKOUT_DATA_FRAGMENT } from '@/checkout/api/graphql/CheckoutDataFragment.graphql';\n\nexport const setPaymentMethodMutation = /* GraphQL */ `\n  mutation setPaymentMethod(\n    $cartId: String!\n    $paymentMethod: PaymentMethodInput!\n  ) {\n    setPaymentMethodOnCart(\n      input: { cart_id: $cartId, payment_method: $paymentMethod }\n    ) {\n      cart {\n        ...CHECKOUT_DATA_FRAGMENT\n      }\n    }\n  }\n\n  ${CHECKOUT_DATA_FRAGMENT}\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { setPaymentMethodMutation } from '@/checkout/api/setPaymentMethod/graphql/setPaymentMethod.graphql';\nimport { transformCart } from '@/checkout/data/transforms';\nimport { MissingCart, MissingPaymentMethod } from '@/checkout/errors';\nimport { dispatchApiCall } from '@/checkout/lib/dispatchApiCall';\nimport { QueueName } from '@/checkout/lib/enqueueRequest';\nimport { state } from '@/checkout/lib/state';\nimport { SetPaymentMethodOnCartInput } from '@/checkout/__generated__/types';\n\nexport const setPaymentMethod = async (\n  paymentMethod: SetPaymentMethodOnCartInput['payment_method']\n) => {\n  const cartId = state.cartId;\n\n  if (!cartId) throw new MissingCart();\n  if (!paymentMethod) throw new MissingPaymentMethod();\n\n  return await dispatchApiCall({\n    options: { variables: { cartId, paymentMethod } },\n    path: 'setPaymentMethodOnCart.cart',\n    query: setPaymentMethodMutation,\n    queueName: QueueName.CartUpdate,\n    transformer: transformCart,\n    type: 'mutation',\n  });\n};\n"],"names":["setPaymentMethodMutation","CHECKOUT_DATA_FRAGMENT","setPaymentMethod","paymentMethod","cartId","state","MissingCart","MissingPaymentMethod","dispatchApiCall","QueueName","transformCart"],"mappings":"oOAmBa,MAAAA,EAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAclDC,CAAsB;AAAA,ECRbC,EAAmB,MAC9BC,GACG,CACH,MAAMC,EAASC,EAAM,OAErB,GAAI,CAACD,EAAc,MAAA,IAAIE,EACvB,GAAI,CAACH,EAAqB,MAAA,IAAII,EAE9B,OAAO,MAAMC,EAAgB,CAC3B,QAAS,CAAE,UAAW,CAAE,OAAAJ,EAAQ,cAAAD,EAAgB,EAChD,KAAM,8BACN,MAAOH,EACP,UAAWS,EAAU,WACrB,YAAaC,EACb,KAAM,UAAA,CACP,CACH"}