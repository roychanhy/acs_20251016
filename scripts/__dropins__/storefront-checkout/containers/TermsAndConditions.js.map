{"version":3,"file":"TermsAndConditions.js","sources":["/@dropins/storefront-checkout/src/components/Markup/Markup.tsx","/@dropins/storefront-checkout/src/components/TermsAndConditions/TermsAndConditionsSkeleton.tsx","/@dropins/storefront-checkout/src/components/TermsAndConditions/TermsAndConditions.tsx","/@dropins/storefront-checkout/src/containers/TermsAndConditions/TermsAndConditions.tsx"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport DOMPurify from 'dompurify';\nimport { FunctionComponent } from 'preact';\n\ninterface MarkupProps {\n  html: string;\n}\n\nexport const Markup: FunctionComponent<MarkupProps> = ({ html }) => {\n  const sanitizedHtml = DOMPurify.sanitize(html, { ADD_ATTR: ['target'] });\n  if (sanitizedHtml === '') return null;\n  // eslint-disable-next-line react/no-danger\n  return <span dangerouslySetInnerHTML={{ __html: sanitizedHtml }} />;\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { Skeleton, SkeletonRow } from '@adobe-commerce/elsie/components';\nimport { FunctionComponent } from 'preact';\n\nexport const TermsAndConditionsSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      className=\"checkout-terms-and-conditions-skeleton\"\n      data-testid=\"checkout-terms-and-conditions-skeleton\"\n    >\n      <SkeletonRow fullWidth={true} size=\"small\" variant=\"row\" />\n    </Skeleton>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { WithConditionals } from '@/checkout/components';\nimport '@/checkout/components/TermsAndConditions/TermsAndConditions.css';\nimport { TermsAndConditionsSkeleton } from '@/checkout/components/TermsAndConditions/TermsAndConditionsSkeleton';\nimport { classes, VComponent } from '@adobe-commerce/elsie/lib';\nimport { FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\n\nexport interface TermsAndConditionsProps\n  extends HTMLAttributes<HTMLFormElement> {\n  agreements?: VNode;\n  error?: string;\n}\n\nconst TermsAndConditionsComponent: FunctionComponent<\n  TermsAndConditionsProps\n> = ({ className, agreements, error, ...props }) => {\n  return (\n    <div\n      className=\"checkout-terms-and-conditions\"\n      data-testid=\"checkout-terms-and-conditions\"\n    >\n      <form\n        {...props}\n        noValidate\n        className={classes(['checkout-terms-and-conditions__form', className])}\n        data-testid=\"checkout-terms-and-conditions-form\"\n        name=\"checkout-terms-and-conditions__form\"\n      >\n        {agreements && (\n          <VComponent\n            className={classes(['checkout-terms-and-conditions__agreements'])}\n            data-testid=\"checkout-terms-and-conditions-agreements\"\n            node={agreements}\n          />\n        )}\n\n        {error && (\n          <div\n            className=\"checkout-terms-and-conditions__error\"\n            data-testid=\"checkout-terms-and-conditions-error\"\n          >\n            {error}\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport const TermsAndConditions = WithConditionals(\n  TermsAndConditionsComponent,\n  TermsAndConditionsSkeleton\n);\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { Markup } from '@/checkout/components';\nimport { TermsAndConditions as TermsAndConditionsComponent } from '@/checkout/components/TermsAndConditions';\nimport { AgreementMode } from '@/checkout/data/models';\nimport { getLatestCheckoutUpdate, state } from '@/checkout/lib';\nimport { Checkbox } from '@adobe-commerce/elsie/components';\nimport { MarkupText, useText } from '@adobe-commerce/elsie/i18n';\nimport {\n  Container,\n  Slot,\n  SlotMethod,\n  SlotProps,\n} from '@adobe-commerce/elsie/lib';\nimport { events } from '@adobe-commerce/event-bus';\nimport { useEffect, useState } from 'preact/hooks';\n\nexport interface TermsAndConditionsProps {\n  active?: boolean;\n  slots?: {\n    Agreements?: SlotProps<{\n      appendAgreement: SlotMethod<{\n        name: string;\n        mode: AgreementMode;\n        translationId?: string;\n        text?: string;\n      }>;\n    }>;\n  };\n}\n\nexport const TermsAndConditions: Container<TermsAndConditionsProps> = ({\n  active = true,\n  slots,\n  ...props\n}) => {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [error, setError] = useState<string>('');\n\n  const { errorMessage } = useText({\n    errorMessage: 'Checkout.TermsAndConditions.error',\n  });\n\n  const disabledViaConfig = state.config?.agreementsEnabled === false;\n\n  const handleChange = () => {\n    setError('');\n  };\n\n  const handleInvalid = () => {\n    setError(errorMessage);\n  };\n\n  useEffect(() => {\n    if (!active || disabledViaConfig) return;\n\n    const pastUpdate = getLatestCheckoutUpdate();\n\n    if (pastUpdate) {\n      setIsInitialized(true);\n      return;\n    }\n\n    const onCheckoutInit = events.on(\n      'checkout/initialized',\n      () => {\n        setIsInitialized(true);\n      },\n      { eager: true }\n    );\n    return () => {\n      onCheckoutInit?.off();\n    };\n  }, [active, disabledViaConfig]);\n\n  return (\n    <TermsAndConditionsComponent\n      {...props}\n      agreements={\n        <Slot\n          context={{\n            appendAgreement(callback) {\n              this._registerMethod((...attrs) => {\n                const _agreement = callback(...attrs);\n\n                if (!_agreement) return;\n\n                const { mode, name, text, translationId } = _agreement;\n\n                if (!text && !translationId) {\n                  console.warn(\n                    `The agreement ${name} is misconfigured. Please provide a text or a translationId.`\n                  );\n                  return;\n                }\n\n                const label = text ? (\n                  <Markup html={text} />\n                ) : (\n                  <MarkupText id={translationId!} />\n                );\n\n                const agreement = (\n                  <Checkbox\n                    checked={mode === AgreementMode.AUTO}\n                    label={label}\n                    name={name}\n                    required={true}\n                    onChange={handleChange}\n                    onInvalid={handleInvalid}\n                  />\n                );\n\n                this._setProps((prev: any) => ({\n                  children: [...(prev.children || []), agreement],\n                }));\n              });\n            },\n          }}\n          name=\"Agreements\"\n          slot={slots?.Agreements}\n        />\n      }\n      error={error}\n      initialized={isInitialized}\n      visible={active && !disabledViaConfig}\n    />\n  );\n};\n"],"names":["Markup","html","sanitizedHtml","DOMPurify","TermsAndConditionsSkeleton","jsx","Skeleton","SkeletonRow","TermsAndConditionsComponent","className","agreements","error","props","jsxs","classes","VComponent","TermsAndConditions","WithConditionals","active","slots","isInitialized","setIsInitialized","useState","setError","errorMessage","useText","disabledViaConfig","_a","state","handleChange","handleInvalid","useEffect","getLatestCheckoutUpdate","onCheckoutInit","events","Slot","callback","attrs","_agreement","mode","name","text","translationId","label","MarkupText","agreement","Checkbox","AgreementMode","prev"],"mappings":"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"}