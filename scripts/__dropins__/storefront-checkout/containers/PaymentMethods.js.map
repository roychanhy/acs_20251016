{"version":3,"file":"PaymentMethods.js","sources":["../../node_modules/@adobe-commerce/elsie/src/icons/Wallet.svg","/@dropins/storefront-checkout/src/components/PaymentMethods/PaymentMethodsSkeleton.tsx","/@dropins/storefront-checkout/src/components/PaymentMethods/PaymentMethods.tsx","/@dropins/storefront-checkout/src/containers/PaymentMethods/PaymentMethods.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgWallet = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M17.93 14.8V18.75H5.97C4.75 18.75 3.75 17.97 3.75 17V6.5M3.75 6.5C3.75 5.53 4.74 4.75 5.97 4.75H15.94V8.25H5.97C4.75 8.25 3.75 7.47 3.75 6.5Z\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M19.35 11.64H14.04V14.81H19.35V11.64Z\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M17.9304 11.64V8.25H15.1504\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgWallet;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { Skeleton, SkeletonRow } from '@adobe-commerce/elsie/components';\nimport { FunctionComponent } from 'preact';\n\nexport const PaymentMethodsSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton data-testid=\"payment-methods-skeleton\">\n      <SkeletonRow size=\"medium\" variant=\"heading\" />\n      <SkeletonRow size=\"medium\" variant=\"empty\" />\n      <SkeletonRow fullWidth={true} size=\"xlarge\" />\n      <SkeletonRow fullWidth={true} size=\"xlarge\" />\n    </Skeleton>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { WithConditionals } from '@/checkout/components/ConditionalWrapper/ConditionalWrapper';\nimport '@/checkout/components/PaymentMethods/PaymentMethods.css';\nimport { PaymentMethodsSkeleton } from '@/checkout/components/PaymentMethods/PaymentMethodsSkeleton';\nimport { PaymentMethodConfig } from '@/checkout/containers';\nimport { PaymentMethod } from '@/checkout/data/models/payment-method';\nimport { scrollToElement } from '@/checkout/lib';\nimport { UIComponentType } from '@/checkout/types/ComponentTypes';\nimport {\n  Icon,\n  IllustratedMessage,\n  InLineAlert,\n  RadioButton,\n  ToggleButton,\n} from '@adobe-commerce/elsie/components';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { Wallet } from '@adobe-commerce/elsie/icons';\nimport { classes, VComponent } from '@adobe-commerce/elsie/lib';\nimport { FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes, useEffect, useRef } from 'preact/compat';\n\ninterface ExtendedPaymentMethod extends PaymentMethodConfig, PaymentMethod {}\n\nexport interface PaymentMethodsProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  error?: string | null;\n  busy?: boolean;\n  onDismissError?: () => void;\n  onSelectionChange?: (value: PaymentMethod) => void;\n  options?: ExtendedPaymentMethod[];\n  paymentMethodContent?: VNode;\n  selection: PaymentMethod | null;\n  title?: VNode;\n  UIComponentType?: UIComponentType;\n}\n\ninterface PaymentOptionProps {\n  UIComponentType?: UIComponentType;\n  busy?: boolean;\n  code: string;\n  icon?: string;\n  onSelectionChange: (value: PaymentMethod) => void;\n  selected: boolean;\n  title: string;\n}\n\nconst PaymentOption: FunctionComponent<PaymentOptionProps> = ({\n  UIComponentType = 'ToggleButton',\n  busy,\n  code,\n  icon,\n  onSelectionChange,\n  selected,\n  title,\n}) => {\n  const commonProps = {\n    busy,\n    className: 'checkout-payment-methods__method',\n    label: title,\n    name: 'payment-method',\n    onChange: () => onSelectionChange({ code, title }),\n    value: code,\n  };\n\n  return UIComponentType === 'ToggleButton' ? (\n    <ToggleButton\n      {...commonProps}\n      // @ts-ignore\n      icon={icon ? <Icon source={icon} /> : undefined}\n      selected={selected}\n    />\n  ) : (\n    <RadioButton {...commonProps} checked={selected} icon={icon ?? undefined} />\n  );\n};\n\nconst PaymentMethodsComponent: FunctionComponent<PaymentMethodsProps> = ({\n  className,\n  error = null,\n  busy = false,\n  onDismissError,\n  onSelectionChange = () => {},\n  options,\n  paymentMethodContent,\n  selection,\n  title,\n  UIComponentType,\n}) => {\n  const translations = useText({\n    EmptyState: 'Checkout.PaymentMethods.emptyState',\n  });\n\n  const hasError = error !== null;\n  const errorRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (hasError && errorRef.current) {\n      scrollToElement(errorRef.current);\n    }\n  }, [hasError]);\n\n  return (\n    <div\n      className={classes(['checkout-payment-methods', className])}\n      data-testid=\"checkout-payment-methods\"\n    >\n      {title && (\n        <VComponent className=\"checkout-payment-methods__title\" node={title} />\n      )}\n\n      {!busy && options!.length === 0 && (\n        <IllustratedMessage\n          data-testid=\"checkout-payment-methods-empty\"\n          icon={<Icon source={Wallet} />}\n          message={<p>{translations.EmptyState}</p>}\n        />\n      )}\n\n      <div\n        className={classes([\n          'checkout-payment-methods__wrapper',\n          ['checkout-payment-methods__wrapper--busy', busy],\n        ])}\n        data-testid=\"checkout-payment-methods-wrapper\"\n      >\n        <div\n          className={classes([\n            'checkout-payment-methods__methods',\n            ['checkout-payment-methods--full-width', options!.length % 2 !== 0],\n          ])}\n        >\n          {options?.map((method) => (\n            <PaymentOption\n              key={method.code}\n              UIComponentType={UIComponentType}\n              busy={busy}\n              code={method.code}\n              icon={method.icon}\n              selected={selection?.code === method.code}\n              title={method.displayLabel ?? true ? method.title : ''}\n              onSelectionChange={onSelectionChange}\n            />\n          ))}\n        </div>\n\n        {paymentMethodContent && (\n          <div className=\"checkout-payment-methods__content\">\n            {paymentMethodContent}\n          </div>\n        )}\n      </div>\n\n      {hasError && (\n        <div\n          ref={errorRef}\n          className=\"checkout-payment-methods__error\"\n          data-testid=\"checkout-payment-methods-alert\"\n        >\n          <InLineAlert\n            heading={error}\n            type=\"error\"\n            variant=\"primary\"\n            onDismiss={onDismissError}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const PaymentMethods = WithConditionals(\n  PaymentMethodsComponent,\n  PaymentMethodsSkeleton\n);\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { setPaymentMethod } from '@/checkout/api';\nimport { PaymentMethods as PaymentMethodsComponent } from '@/checkout/components/PaymentMethods/PaymentMethods';\nimport { Cart } from '@/checkout/data/models/cart';\nimport { PaymentMethod } from '@/checkout/data/models/payment-method';\nimport {\n  getLatestCheckoutUpdate,\n  getValue,\n  hasShippingAddress,\n  isVirtualCart,\n  notifyValues,\n} from '@/checkout/lib';\nimport { hasPendingCartUpdates } from '@/checkout/lib/enqueueRequest';\nimport { state } from '@/checkout/lib/state';\nimport { UIComponentType } from '@/checkout/types/ComponentTypes';\nimport { TitleProps } from '@/checkout/types/TitleProps';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { Container, Slot, SlotProps } from '@adobe-commerce/elsie/lib';\nimport { events } from '@adobe-commerce/event-bus';\nimport { HTMLAttributes } from 'preact/compat';\nimport { useCallback, useEffect, useMemo, useState } from 'preact/hooks';\n\nexport interface PaymentMethodRenderCtx {\n  cartId: string;\n  replaceHTML: (domElement: HTMLElement) => void;\n}\n\nexport interface PaymentMethodConfig {\n  displayLabel?: boolean;\n  enabled?: boolean;\n  icon?: string;\n  autoSync?: boolean;\n  render?: SlotProps<PaymentMethodRenderCtx>;\n}\n\nexport interface PaymentMethodsSlot {\n  [code: string]: PaymentMethodConfig;\n}\n\ninterface CartSyncError {\n  method: PaymentMethod;\n  error: Error;\n}\n\nexport interface PaymentMethodsProps\n  extends HTMLAttributes<HTMLDivElement>,\n    TitleProps {\n  slots?: {\n    Methods?: PaymentMethodsSlot;\n  } & TitleProps['slots'];\n  UIComponentType?: UIComponentType;\n  active?: boolean;\n  autoSync?: boolean;\n  onCartSyncError?: (error: CartSyncError) => void;\n  onSelectionChange?: (method: PaymentMethod) => void;\n}\n\nfunction isValidSelection(\n  selection: PaymentMethod | null,\n  options: PaymentMethod[]\n) {\n  if (!selection) return false;\n  return options.some((option) => option.code === selection.code);\n}\n\nfunction isEqual(a: PaymentMethod | null, b: PaymentMethod | null) {\n  if (!a || !b) return false;\n  return a.code === b.code;\n}\n\nfunction isValidPaymentMethod(method: PaymentMethod | null) {\n  if (!method) return false;\n  return !!method.code && !!method.title;\n}\n\nexport const PaymentMethods: Container<PaymentMethodsProps> = ({\n  UIComponentType = 'ToggleButton',\n  active = true,\n  autoSync = true,\n  displayTitle = true,\n  slots,\n  onCartSyncError,\n  onSelectionChange,\n}) => {\n  const [error, setError] = useState<string | null>(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [selection, setSelection] = useState<PaymentMethod | null>(null);\n  const [options, setOptions] = useState<PaymentMethod[]>([]);\n  const slotMethods = slots?.Methods;\n  const hasPendingUpdates = hasPendingCartUpdates.value;\n\n  const enabledOptions = options\n    .filter((method) => {\n      return slotMethods?.[method.code]?.enabled !== false;\n    })\n    .map((method) => {\n      const slotMethod = slotMethods?.[method.code] || {};\n\n      return {\n        ...method,\n        ...slotMethod,\n      };\n    });\n\n  const { cartSyncError, defaultTitle } = useText({\n    cartSyncError: 'Checkout.PaymentMethods.cartSyncError',\n    defaultTitle: 'Checkout.PaymentMethods.title',\n  });\n\n  const handleDismissError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  const setUserSelection = useCallback((selection: PaymentMethod | null) => {\n    setError(null);\n    setSelection(selection);\n    notifyValues({ selectedPaymentMethod: selection });\n  }, []);\n\n  const setUserSelectionOnCart = useCallback(\n    async (selection: PaymentMethod, fallback?: PaymentMethod | null) => {\n      const canSetUserSelectionOnCart = isVirtualCart() || hasShippingAddress();\n      if (!canSetUserSelectionOnCart) return;\n\n      const methodConfig = slotMethods?.[selection.code];\n      const shouldAutoSync = methodConfig?.autoSync ?? autoSync;\n\n      if (!shouldAutoSync) return;\n\n      setPaymentMethod({ code: selection.code }).catch((error) => {\n        setUserSelection(fallback ?? null);\n        onCartSyncError?.({ method: selection, error });\n\n        if (!onCartSyncError) {\n          setError(cartSyncError);\n        }\n      });\n    },\n    [slotMethods, autoSync, setUserSelection, onCartSyncError, cartSyncError]\n  );\n\n  const handleSelectionChange = useCallback(\n    async (selection: PaymentMethod) => {\n      const prevSelection = getValue('selectedPaymentMethod');\n\n      setUserSelection(selection);\n      onSelectionChange?.(selection);\n\n      await setUserSelectionOnCart(selection, prevSelection);\n    },\n    [onSelectionChange, setUserSelection, setUserSelectionOnCart]\n  );\n\n  const handleCheckoutData = useCallback(\n    (data: Cart | null) => {\n      const isEmptyCart = !data || data.isEmpty;\n\n      if (isEmptyCart) {\n        setUserSelection(null);\n        setOptions([]);\n        return;\n      }\n\n      const availableOptions = data.availablePaymentMethods ?? [];\n      setOptions(availableOptions);\n\n      if (availableOptions.length === 0) {\n        setUserSelection(null);\n        return;\n      }\n\n      const cartSelection = data.selectedPaymentMethod ?? null;\n      const hasCartSelection = isValidPaymentMethod(cartSelection);\n      const userSelection = getValue('selectedPaymentMethod');\n      const isAvailable = isValidSelection(userSelection, availableOptions);\n      const haveSameSelection = isEqual(userSelection, cartSelection);\n\n      // User has valid selection that differs from cart\n      if (userSelection && isAvailable && !haveSameSelection) {\n        setUserSelectionOnCart(userSelection, cartSelection);\n        return;\n      }\n\n      // User has invalid selection but cart has valid selection\n      if ((!userSelection || !isAvailable) && hasCartSelection) {\n        setUserSelection(cartSelection);\n        return;\n      }\n\n      // Neither user nor cart has valid selection\n      if ((!userSelection || !isAvailable) && !hasCartSelection) {\n        const newSelection = availableOptions[0];\n        setUserSelection(newSelection);\n        setUserSelectionOnCart(newSelection);\n      }\n    },\n    [setUserSelection, setUserSelectionOnCart]\n  );\n\n  useEffect(() => {\n    if (!active) return;\n\n    const pastUpdate = getLatestCheckoutUpdate();\n\n    if (pastUpdate) {\n      setIsInitialized(true);\n      // When component becomes active, restore key state so handleCheckoutData can work properly\n      const userSelection = getValue('selectedPaymentMethod');\n      if (userSelection) {\n        setSelection(userSelection);\n      }\n      handleCheckoutData(pastUpdate);\n      return;\n    }\n\n    const onCheckoutInit = events.on(\n      'checkout/initialized',\n      (data: Cart | null) => {\n        setIsInitialized(true);\n        handleCheckoutData(data);\n      },\n      { eager: true }\n    );\n\n    return () => {\n      onCheckoutInit?.off();\n    };\n  }, [active, handleCheckoutData]);\n\n  useEffect(() => {\n    if (!active) return;\n\n    const onCheckoutUpdated = events.on(\n      'checkout/updated',\n      handleCheckoutData,\n      { eager: false }\n    );\n\n    return () => {\n      onCheckoutUpdated?.off();\n    };\n  }, [active, handleCheckoutData]);\n\n  const selectedPaymentMethodHandler = selection\n    ? slots?.Methods?.[selection.code]?.render\n    : null;\n\n  const paymentMethodContent = selectedPaymentMethodHandler ? (\n    <Slot\n      key={selectedPaymentMethodHandler}\n      context={{\n        cartId: state.cartId ?? '',\n        replaceHTML(domElement: HTMLElement) {\n          this.replaceWith(domElement);\n        },\n      }}\n      name=\"PaymentMethodContent\"\n      slot={selectedPaymentMethodHandler}\n    />\n  ) : undefined;\n\n  const titleContent = useMemo(() => {\n    if (!displayTitle) return undefined;\n\n    return (\n      <Slot name=\"checkout-payment-methods-title\" slot={slots?.Title}>\n        <h2>{defaultTitle}</h2>\n      </Slot>\n    );\n  }, [displayTitle, slots?.Title, defaultTitle]);\n\n  return (\n    <PaymentMethodsComponent\n      UIComponentType={UIComponentType}\n      busy={hasPendingUpdates}\n      error={error}\n      initialized={isInitialized}\n      options={enabledOptions}\n      paymentMethodContent={paymentMethodContent}\n      selection={selection}\n      title={titleContent}\n      visible={active}\n      onDismissError={handleDismissError}\n      onSelectionChange={handleSelectionChange}\n    />\n  );\n};\n"],"names":["SvgWallet","props","React","PaymentMethodsSkeleton","jsxs","Skeleton","jsx","SkeletonRow","PaymentOption","UIComponentType","busy","code","icon","onSelectionChange","selected","title","commonProps","ToggleButton","Icon","RadioButton","PaymentMethodsComponent","className","error","onDismissError","options","paymentMethodContent","selection","translations","useText","hasError","errorRef","useRef","useEffect","scrollToElement","classes","VComponent","IllustratedMessage","Wallet","method","InLineAlert","PaymentMethods","WithConditionals","isValidSelection","option","isEqual","a","b","isValidPaymentMethod","active","autoSync","displayTitle","slots","onCartSyncError","setError","useState","isInitialized","setIsInitialized","setSelection","setOptions","slotMethods","hasPendingUpdates","hasPendingCartUpdates","enabledOptions","_a","slotMethod","cartSyncError","defaultTitle","handleDismissError","useCallback","setUserSelection","notifyValues","setUserSelectionOnCart","fallback","isVirtualCart","hasShippingAddress","methodConfig","setPaymentMethod","handleSelectionChange","prevSelection","getValue","handleCheckoutData","data","availableOptions","cartSelection","hasCartSelection","userSelection","isAvailable","haveSameSelection","newSelection","pastUpdate","getLatestCheckoutUpdate","onCheckoutInit","events","onCheckoutUpdated","selectedPaymentMethodHandler","_b","Slot","state","domElement","titleContent","useMemo"],"mappings":"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","x_google_ignoreList":[0]}