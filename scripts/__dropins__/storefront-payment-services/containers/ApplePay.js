/*! Copyright 2025 Adobe
All Rights Reserved. */
import{jsx as s}from"@dropins/tools/preact-jsx-runtime.js";import{useState as I,useEffect as m,useRef as v}from"@dropins/tools/preact-compat.js";import{events as L}from"@dropins/tools/event-bus.js";import{s as C,p as M}from"../chunks/signals.js";import{P as l}from"../chunks/location.js";import{useState as R}from"@dropins/tools/preact-hooks.js";import{useText as k}from"@dropins/tools/i18n.js";import"../chunks/state.js";import"@dropins/tools/signals.js";const w="en_US";function x(){const[t,e]=I(L.lastPayload("locale")||w);return m(()=>{const a=L.on("locale",e);return()=>a==null?void 0:a.off()},[t]),t}const d="payment-services_apple-pay-container";function F(t){const e=M.value;switch(t){case l.CHECKOUT:return e==null?void 0:e.checkout;case l.PRODUCT_DETAIL:return e==null?void 0:e.productDetail;default:throw new Error(`Unsupported location: ${t}`)}}const W=({location:t,getCartId:e,createCart:a,onButtonClick:y,onSuccess:h,onError:A,hidden:b,disabled:u})=>{if(!e&&!a||e&&a)throw new Error("Either getCartId or createCart must be provided and not both.");t||(console.warn("No location provided for Apple Pay button. Please add a location. Defaulting to CHECKOUT."),t=l.CHECKOUT);const n=F(t),[f,E]=R(null),r=v(null),P=x(),T=v(!!u),{methodNotAvailableMessage:N,methodNotLoadedMessage:O,methodLoadingMessage:U}=k({methodNotAvailableMessage:"PaymentServices.messages.methodNotAvailable",methodNotLoadedMessage:"PaymentServices.messages.methodNotLoaded",methodLoadingMessage:"PaymentServices.messages.methodLoading"});m(()=>{let c=null;if(!(n!=null&&n.Payment.ApplePay.isAvailable())||!r.current)return;const g=`apple-pay-${Math.random().toString(36).slice(2,11)}`;r.current.id=g;const D=async()=>{if(e)return e();const o=a.getCartItems();if(!o)throw new Error("No items found to be added to the cart.");return c=n._Utils.addProductsToNewCart(H(o)),(await c).cartId},S=()=>{c!==null&&c.then(async({cartId:o})=>{await n._Utils.setCartAsInactive(o)}).catch(console.error)},$={getCartId:D,useApplePayShippingAddress:t===l.PRODUCT_DETAIL,useApplePayBillingAddress:t===l.PRODUCT_DETAIL,onSuccess:h,onError:A,buttonLanguage:{locale:_(P)},container:`#${g}`,onButtonClick:y,onCancel:S,disabled:T.current};let p=null;return n.Payment.ApplePay.render($).then(o=>{p=o,E(p)}).catch(o=>{console.error("Apple Pay render failed:",o)}),()=>{p&&p.teardown()}},[n,t,e,a,h,A,y,P]),m(()=>{f&&f.setDisabled(!!u)},[f,u]);const i={display:b?"none":"block"};return n&&!n.Payment.ApplePay.isAvailable()?s("div",{ref:r,class:d,style:i,children:s("div",{class:"apple-pay-error",children:N})}):C.value==="error"?s("div",{ref:r,class:d,style:i,children:s("div",{class:"apple-pay-error",children:O})}):C.value==="initializing"?s("div",{ref:r,class:d,style:i,children:s("div",{class:"apple-pay-loading",children:U})}):s("div",{ref:r,class:d,style:i})};function H(t){return t.map(e=>({sku:e.sku,quantity:e.quantity,parent_sku:e.parentSku,selected_options:e.selectedOptions,entered_options:e.enteredOptions}))}function _(t){const e=t.split("_");if(e.length<2){const a=_(w);return console.warn(`Cannot map elsie locale "${t}" to apple pay button locale. Falling back to "${a}".`),a}return`${e[0]}-${e[1]}`}export{W as ApplePay,W as default};
//# sourceMappingURL=ApplePay.js.map
