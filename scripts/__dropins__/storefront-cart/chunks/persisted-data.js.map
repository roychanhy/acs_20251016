{"version":3,"file":"persisted-data.js","sources":["/@dropins/storefront-cart/src/lib/persisted-data.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { CartModel } from '@/cart/data/models';\n\nconst AUTHENTICATED_CART_KEY = 'DROPIN__CART__CART__AUTHENTICATED';\n\nexport function setPersistedCartData(data: CartModel | null) {\n  if (data) {\n    sessionStorage.setItem('DROPIN__CART__CART__DATA', JSON.stringify(data));\n  } else {\n    sessionStorage.removeItem('DROPIN__CART__CART__DATA');\n  }\n}\n\nexport function getPersistedCartData(): CartModel | null {\n  const data = sessionStorage.getItem('DROPIN__CART__CART__DATA');\n\n  if (data) return JSON.parse(data);\n\n  return null;\n}\n\nexport function setEstimatedShippingLocation(\n  data: {\n    [key: string]: string;\n  } | null\n) {\n  if (data) {\n    sessionStorage.setItem(\n      'DROPIN__CART__SHIPPING__DATA',\n      JSON.stringify(data)\n    );\n  } else {\n    sessionStorage.removeItem('DROPIN__CART__SHIPPING__DATA');\n  }\n}\n\nexport function getEstimatedShippingLocation(): {\n  [key: string]: string;\n} | null {\n  const data = sessionStorage.getItem('DROPIN__CART__SHIPPING__DATA');\n\n  if (data) return JSON.parse(data);\n\n  return null;\n}\n\nexport function setAuthenticatedCart(isAuthenticated: boolean) {\n  isAuthenticated\n    ? localStorage.setItem(AUTHENTICATED_CART_KEY, 'true')\n    : localStorage.removeItem(AUTHENTICATED_CART_KEY);\n}\n\nexport function getAuthenticatedCart(): boolean {\n  return localStorage.getItem(AUTHENTICATED_CART_KEY) === 'true';\n}\n"],"names":["AUTHENTICATED_CART_KEY","setPersistedCartData","data","getPersistedCartData","setEstimatedShippingLocation","setAuthenticatedCart","isAuthenticated","getAuthenticatedCart"],"mappings":"AAmBA,MAAMA,EAAyB,oCAExB,SAASC,EAAqBC,EAAwB,CACvDA,EACF,eAAe,QAAQ,2BAA4B,KAAK,UAAUA,CAAI,CAAC,EAEvE,eAAe,WAAW,0BAA0B,CAExD,CAEO,SAASC,GAAyC,CACjD,MAAAD,EAAO,eAAe,QAAQ,0BAA0B,EAE9D,OAAIA,EAAa,KAAK,MAAMA,CAAI,EAEzB,IACT,CAEO,SAASE,EACdF,EAGA,CACIA,EACa,eAAA,QACb,+BACA,KAAK,UAAUA,CAAI,CACrB,EAEA,eAAe,WAAW,8BAA8B,CAE5D,CAYO,SAASG,EAAqBC,EAA0B,CAC7DA,EACI,aAAa,QAAQN,EAAwB,MAAM,EACnD,aAAa,WAAWA,CAAsB,CACpD,CAEO,SAASO,GAAgC,CACvC,OAAA,aAAa,QAAQP,CAAsB,IAAM,MAC1D"}