{"version":3,"file":"ReturnsList.js","sources":["/@dropins/storefront-order/src/hooks/containers/useReturnsList.tsx","/@dropins/storefront-order/src/containers/ReturnsList/ReturnsList.tsx"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { getCustomerOrdersReturn } from '@/order/api';\nimport { OrdersReturnPropsModel } from '@/order/data/models';\nimport { UseReturnsListProps } from '@/order/types';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\n\nconst DEFAULT_PAGE_INFO = { totalPages: 1, currentPage: 1, pageSize: 1 };\n\nexport const useReturnsList = ({ returnPageSize }: UseReturnsListProps) => {\n  const [loading, setLoading] = useState(true);\n  const [orderReturns, setOrderReturns] = useState<\n    OrdersReturnPropsModel[] | []\n  >([]);\n\n  const [pageInfo, setPageInfo] = useState<{\n    totalPages: number;\n    currentPage: number;\n    pageSize: number;\n  }>(DEFAULT_PAGE_INFO);\n\n  const [selectedPage, setSelectedPage] = useState<number>(1);\n\n  useEffect(() => {\n    getCustomerOrdersReturn(returnPageSize, selectedPage)\n      .then((response) => {\n        setOrderReturns(response?.ordersReturn ?? []);\n        setPageInfo(response?.pageInfo ?? DEFAULT_PAGE_INFO);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [returnPageSize, selectedPage]);\n\n  useEffect(() => {\n    window?.scrollTo({\n      top: 100,\n      behavior: 'smooth',\n    });\n  }, [selectedPage]);\n\n  const handleSetSelectPage = useCallback((value: number) => {\n    setSelectedPage(value);\n  }, []);\n\n  return {\n    pageInfo,\n    selectedPage,\n    loading,\n    orderReturns,\n    handleSetSelectPage,\n  };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { ReturnsListContent } from '@/order/components';\nimport { useGetStoreConfig, useIsMobile, useReturnsList } from '@/order/hooks';\nimport { ReturnsListProps } from '@/order/types';\nimport { classes, Container } from '@adobe-commerce/elsie/lib';\nimport { useText } from '@adobe-commerce/elsie/i18n';\n\nexport const ReturnsList: Container<ReturnsListProps> = ({\n  slots,\n  withReturnsListButton,\n  className,\n  minifiedView,\n  withHeader,\n  withThumbnails,\n  returnPageSize,\n  returnsInMinifiedView,\n  routeReturnDetails,\n  routeOrderDetails,\n  routeTracking,\n  routeReturnsList,\n  routeProductDetails,\n}) => {\n  const storeConfig = useGetStoreConfig();\n  const { pageInfo, selectedPage, handleSetSelectPage, loading, orderReturns } =\n    useReturnsList({ returnPageSize });\n  const isMobile = useIsMobile();\n\n  const minifiedViewKey = minifiedView ? 'minifiedView' : 'fullSizeView';\n\n  const translations = useText({\n    viewAllOrdersButton: `Order.Returns.${minifiedViewKey}.returnsList.viewAllOrdersButton`,\n    ariaLabelLink: `Order.Returns.${minifiedViewKey}.returnsList.ariaLabelLink`,\n    emptyOrdersListMessage: `Order.Returns.${minifiedViewKey}.returnsList.emptyOrdersListMessage`,\n    minifiedViewTitle: `Order.Returns.${minifiedViewKey}.returnsList.minifiedViewTitle`,\n    orderNumber: `Order.Returns.${minifiedViewKey}.returnsList.orderNumber`,\n    returnNumber: `Order.Returns.${minifiedViewKey}.returnsList.returnNumber`,\n    carrier: `Order.Returns.${minifiedViewKey}.returnsList.carrier`,\n  });\n\n  return (\n    <div className={classes(['order-returns-list', className])}>\n      <ReturnsListContent\n        placeholderImage={storeConfig?.baseMediaUrl ?? ''}\n        minifiedViewKey={minifiedViewKey}\n        withOrderNumber={true}\n        withReturnNumber={true}\n        slots={slots}\n        selectedPage={selectedPage}\n        handleSetSelectPage={handleSetSelectPage}\n        pageInfo={pageInfo}\n        withReturnsListButton={withReturnsListButton}\n        isMobile={isMobile}\n        orderReturns={orderReturns}\n        translations={translations}\n        withHeader={withHeader}\n        returnsInMinifiedView={returnsInMinifiedView}\n        withThumbnails={withThumbnails}\n        minifiedView={minifiedView}\n        routeReturnDetails={routeReturnDetails}\n        routeOrderDetails={routeOrderDetails}\n        routeTracking={routeTracking}\n        routeReturnsList={routeReturnsList}\n        routeProductDetails={routeProductDetails}\n        loading={loading}\n      />\n    </div>\n  );\n};\n"],"names":["DEFAULT_PAGE_INFO","useReturnsList","returnPageSize","loading","setLoading","useState","orderReturns","setOrderReturns","pageInfo","setPageInfo","selectedPage","setSelectedPage","useEffect","getCustomerOrdersReturn","response","handleSetSelectPage","useCallback","value","ReturnsList","slots","withReturnsListButton","className","minifiedView","withHeader","withThumbnails","returnsInMinifiedView","routeReturnDetails","routeOrderDetails","routeTracking","routeReturnsList","routeProductDetails","storeConfig","useGetStoreConfig","isMobile","useIsMobile","minifiedViewKey","translations","useText","jsx","classes","ReturnsListContent"],"mappings":"y9BAqBA,MAAMA,EAAoB,CAAE,WAAY,EAAG,YAAa,EAAG,SAAU,CAAE,EAE1DC,EAAiB,CAAC,CAAE,eAAAC,KAA0C,CACzE,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAS,EAAI,EACrC,CAACC,EAAcC,CAAe,EAAIF,EAEtC,CAAA,CAAE,EAEE,CAACG,EAAUC,CAAW,EAAIJ,EAI7BL,CAAiB,EAEd,CAACU,EAAcC,CAAe,EAAIN,EAAiB,CAAC,EAE1DO,EAAU,IAAM,CACdC,EAAwBX,EAAgBQ,CAAY,EACjD,KAAMI,GAAa,CACFP,GAAAO,GAAA,YAAAA,EAAU,eAAgB,EAAE,EAChCL,GAAAK,GAAA,YAAAA,EAAU,WAAYd,CAAiB,CAAA,CACpD,EACA,QAAQ,IAAM,CACbI,EAAW,EAAK,CAAA,CACjB,CAAA,EACF,CAACF,EAAgBQ,CAAY,CAAC,EAEjCE,EAAU,IAAM,CACd,qBAAQ,SAAS,CACf,IAAK,IACL,SAAU,QAAA,EACX,EACA,CAACF,CAAY,CAAC,EAEX,MAAAK,EAAsBC,EAAaC,GAAkB,CACzDN,EAAgBM,CAAK,CACvB,EAAG,EAAE,EAEE,MAAA,CACL,SAAAT,EACA,aAAAE,EACA,QAAAP,EACA,aAAAG,EACA,oBAAAS,CACF,CACF,EC5CaG,GAA2C,CAAC,CACvD,MAAAC,EACA,sBAAAC,EACA,UAAAC,EACA,aAAAC,EACA,WAAAC,EACA,eAAAC,EACA,eAAAtB,EACA,sBAAAuB,EACA,mBAAAC,EACA,kBAAAC,EACA,cAAAC,EACA,iBAAAC,EACA,oBAAAC,CACF,IAAM,CACJ,MAAMC,EAAcC,EAAkB,EAChC,CAAE,SAAAxB,EAAU,aAAAE,EAAc,oBAAAK,EAAqB,QAAAZ,EAAS,aAAAG,GAC5DL,EAAe,CAAE,eAAAC,EAAgB,EAC7B+B,EAAWC,EAAY,EAEvBC,EAAkBb,EAAe,eAAiB,eAElDc,EAAeC,EAAQ,CAC3B,oBAAqB,iBAAiBF,CAAe,mCACrD,cAAe,iBAAiBA,CAAe,6BAC/C,uBAAwB,iBAAiBA,CAAe,sCACxD,kBAAmB,iBAAiBA,CAAe,iCACnD,YAAa,iBAAiBA,CAAe,2BAC7C,aAAc,iBAAiBA,CAAe,4BAC9C,QAAS,iBAAiBA,CAAe,sBAAA,CAC1C,EAGC,OAAAG,EAAC,OAAI,UAAWC,EAAQ,CAAC,qBAAsBlB,CAAS,CAAC,EACvD,SAAAiB,EAACE,EAAA,CACC,kBAAkBT,GAAA,YAAAA,EAAa,eAAgB,GAC/C,gBAAAI,EACA,gBAAiB,GACjB,iBAAkB,GAClB,MAAAhB,EACA,aAAAT,EACA,oBAAAK,EACA,SAAAP,EACA,sBAAAY,EACA,SAAAa,EACA,aAAA3B,EACA,aAAA8B,EACA,WAAAb,EACA,sBAAAE,EACA,eAAAD,EACA,aAAAF,EACA,mBAAAI,EACA,kBAAAC,EACA,cAAAC,EACA,iBAAAC,EACA,oBAAAC,EACA,QAAA3B,CAAA,CAAA,EAEJ,CAEJ"}