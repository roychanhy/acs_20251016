{"version":3,"file":"CreateReturn.js","sources":["../../node_modules/@adobe-commerce/elsie/src/icons/Warning.svg","../../node_modules/@adobe-commerce/elsie/src/icons/CheckWithCircle.svg","/@dropins/storefront-order/src/hooks/containers/useCreateReturn.tsx","/@dropins/storefront-order/src/hooks/useInLineAlert.tsx","/@dropins/storefront-order/src/containers/CreateReturn/CreateReturn.tsx","/@dropins/storefront-order/src/components/ReturnOrderMessage/ReturnOrderMessage.tsx","/@dropins/storefront-order/src/components/ReturnOrderProductList/ReturnOrderProductList.tsx","/@dropins/storefront-order/src/components/ReturnReasonForm/ReturnReasonForm.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgWarning = (props) => /* @__PURE__ */ React.createElement(\"svg\", { id: \"Icon_Warning_Base\", width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { clipPath: \"url(#clip0_841_1324)\" }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M11.9949 2.30237L0.802734 21.6977H23.1977L11.9949 2.30237Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M12.4336 10.5504L12.3373 14.4766H11.6632L11.5669 10.5504V9.51273H12.4336V10.5504ZM11.5883 18.2636V17.2687H12.4229V18.2636H11.5883Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })), /* @__PURE__ */ React.createElement(\"defs\", null, /* @__PURE__ */ React.createElement(\"clipPath\", { id: \"clip0_841_1324\" }, /* @__PURE__ */ React.createElement(\"rect\", { width: 24, height: 21, fill: \"white\", transform: \"translate(0 1.5)\" }))));\nexport default SvgWarning;\n","import * as React from \"react\";\nconst SvgCheckWithCircle = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M0.75 12C0.75 5.78421 5.78421 0.75 12 0.75C18.2158 0.75 23.25 5.78421 23.25 12C23.25 18.2158 18.2158 23.25 12 23.25C5.78421 23.25 0.75 18.2158 0.75 12Z\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M6.75 12.762L10.2385 15.75L17.25 9\", stroke: \"currentColor\" }));\nexport default SvgCheckWithCircle;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport {\n  getAttributesList,\n  requestGuestReturn,\n  requestReturn,\n} from '@/order/api';\nimport {\n  AttributesFormModel,\n  OrderDataModel,\n  OrderItemModel,\n} from '@/order/data/models';\nimport { StepsTypes, UseCreateReturn } from '@/order/types';\nimport { useState, useCallback, useEffect, useRef } from 'preact/hooks';\nimport { createRef, RefObject } from 'preact';\nimport {\n  processFormElement,\n  sortItemsByCondition,\n} from '@/order/lib/returnOrdersHelper';\nimport { events } from '@adobe-commerce/event-bus';\nimport { getQueryParam } from '@/order/lib/getQueryParam';\n\nexport const useCreateReturn = ({\n  onSuccess,\n  onError,\n  handleSetInLineAlert,\n  orderData,\n}: UseCreateReturn) => {\n  const [isGuestCreateReturn, setIsGuestCreateReturn] = useState(false);\n  const [order, setOrder] = useState({ id: '', email: '', ...orderData });\n  const [steps, setSteps] = useState<StepsTypes>('products');\n  const [loading, setLoading] = useState(true);\n  const [selectedProductList, setSelectedProductList] = useState<\n    OrderItemModel[] | []\n  >([]);\n  const [attributesList, setAttributesList] = useState<\n    AttributesFormModel[] | []\n  >([]);\n  const [itemsEligibleForReturn, setItemsEligibleForReturn] = useState<\n    OrderItemModel[]\n  >([]);\n\n  const formsRef = useRef<RefObject<HTMLFormElement>[]>([]);\n\n  if (formsRef.current.length !== selectedProductList.length) {\n    formsRef.current = selectedProductList.map(\n      (_, i) => formsRef.current[i] || createRef<HTMLFormElement>()\n    );\n  }\n\n  useEffect(() => {\n    const event = events.on(\n      'order/data',\n      (order: OrderDataModel) => {\n        setOrder(order);\n        const sortedReturnItems = sortItemsByCondition(order);\n        setItemsEligibleForReturn(sortedReturnItems);\n        setIsGuestCreateReturn(getQueryParam('orderRef')?.length > 20);\n        setLoading(false);\n      },\n      { eager: true }\n    );\n\n    return () => {\n      event?.off();\n    };\n  }, []);\n\n  useEffect(() => {\n    getAttributesList('RMA_ITEM').then((response) => {\n      if (!response?.length) return;\n\n      setAttributesList(response);\n      setLoading(false);\n    });\n  }, []);\n\n  const handleSelectedProductList = useCallback((orderItem: OrderItemModel) => {\n    setSelectedProductList((currentList) => {\n      const index = currentList.findIndex(\n        (item) => item?.productSku === orderItem?.productSku\n      );\n\n      if (index > -1) {\n        return currentList.filter(\n          (item) => item?.productSku !== orderItem?.productSku\n        );\n      }\n\n      return [...currentList, orderItem];\n    });\n  }, []);\n\n  const handleChangeStep = useCallback(\n    (value: StepsTypes) => {\n      setSteps(value);\n      handleSetInLineAlert();\n      if (value === 'products') {\n        setSelectedProductList([]);\n      }\n    },\n    [handleSetInLineAlert]\n  );\n\n  const handleSetQuantity = useCallback(\n    (value: number, productSku: string) => {\n      const result = selectedProductList.map((el) =>\n        el.productSku === productSku\n          ? { ...el, currentReturnOrderQuantity: value }\n          : el\n      );\n      setSelectedProductList(result);\n    },\n    [selectedProductList]\n  );\n\n  const onSubmit = useCallback(\n    async (\n      _: SubmitEvent,\n      isValid: boolean\n    ): Promise<void | null | undefined> => {\n      if (!isValid) return;\n\n      setLoading(true);\n      const orderReturnInfo = {\n        orderUid: order.id,\n        contactEmail: order.email,\n      };\n      const items = processFormElement(formsRef);\n\n      if (!isGuestCreateReturn) {\n        requestReturn({ ...orderReturnInfo, items })\n          .then((response) => {\n            onSuccess?.(response);\n            handleChangeStep('success');\n            handleSetInLineAlert();\n          })\n          .catch((error) => {\n            onError?.(error.message);\n            handleSetInLineAlert({ type: 'error', heading: error.message });\n          });\n      } else {\n        requestGuestReturn({\n          token: getQueryParam('orderRef'),\n          contactEmail: orderReturnInfo.contactEmail,\n          items,\n          commentText: '.',\n        })\n          .then((response) => {\n            onSuccess?.(response);\n            handleChangeStep('success');\n            handleSetInLineAlert();\n          })\n          .catch((error) => {\n            onError?.(error.message);\n            handleSetInLineAlert({ type: 'error', heading: error.message });\n          });\n      }\n\n      setLoading(false);\n    },\n    [\n      handleChangeStep,\n      onError,\n      onSuccess,\n      handleSetInLineAlert,\n      order,\n      isGuestCreateReturn,\n    ]\n  );\n\n  return {\n    order,\n    steps,\n    loading,\n    formsRef,\n    attributesList,\n    selectedProductList,\n    itemsEligibleForReturn,\n    handleSelectedProductList,\n    handleSetQuantity,\n    handleChangeStep,\n    onSubmit,\n  };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { useState, useCallback } from 'preact/hooks';\nimport { InLineAlertProps } from '../types';\nimport {\n  CheckWithCircle as Success,\n  Warning,\n  WarningWithCircle as Error,\n} from '@adobe-commerce/elsie/icons';\nimport { Icon } from '@adobe-commerce/elsie/components';\n\nconst iconsList = {\n  success: Success,\n  warning: Warning,\n  error: Error,\n};\n\nexport const useInLineAlert = () => {\n  const [inLineAlertProps, setInLineAlertProps] = useState<InLineAlertProps>({\n    type: 'success',\n    heading: '',\n  });\n\n  const handleSetInLineAlert = useCallback(\n    (notification: InLineAlertProps | undefined) => {\n      if (!notification?.type) {\n        setInLineAlertProps({ type: 'success', heading: '' });\n        return;\n      }\n\n      const icon = <Icon source={iconsList[notification.type]} />;\n\n      setInLineAlertProps({\n        ...notification,\n        icon,\n      });\n    },\n    []\n  );\n\n  return { inLineAlertProps, handleSetInLineAlert };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { Container, classes } from '@adobe-commerce/elsie/lib';\nimport { CreateReturnProps } from '@/order/types/createReturn.types';\nimport {\n  OrderProductListSkeleton,\n  ReturnOrderMessage,\n  ReturnOrderProductList,\n  ReturnReasonForm,\n} from '@/order/components';\nimport { StepsTypes } from '@/order/types';\nimport {\n  useCreateReturn,\n  useInLineAlert,\n  useGetStoreConfig,\n} from '@/order/hooks';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { Header, InLineAlert } from '@adobe-commerce/elsie/components';\nimport { h } from 'preact';\nimport { setTaxStatus } from '@/order/lib/setTaxStatus';\nimport { OrderDataModel } from '@/order/data/models';\n\nexport const CreateReturn: Container<CreateReturnProps> = ({\n  className,\n  orderData,\n  slots,\n  onSuccess,\n  onError,\n  routeReturnSuccess,\n  showConfigurableOptions,\n}) => {\n  const translations = useText({\n    headerText: 'Order.CreateReturn.headerText',\n    successTitle: 'Order.CreateReturn.success.title',\n    successMessage: 'Order.CreateReturn.success.message',\n    sender: 'Order.CreateReturn.giftCard.sender',\n    recipient: 'Order.CreateReturn.giftCard.recipient',\n    message: 'Order.CreateReturn.giftCard.message',\n    outOfStock: 'Order.CreateReturn.stockStatus.outOfStock',\n    nextStep: 'Order.CreateReturn.buttons.nextStep',\n    backStep: 'Order.CreateReturn.buttons.backStep',\n    submit: 'Order.CreateReturn.buttons.submit',\n    backStore: 'Order.CreateReturn.buttons.backStore',\n    downloadableCount: 'Order.CreateReturn.downloadableCount',\n    returnedItems: 'Order.CreateReturn.returnedItems',\n    configurationsListQuantity:\n      'Order.CreateReturn.configurationsList.quantity',\n  });\n\n  const { inLineAlertProps, handleSetInLineAlert } = useInLineAlert();\n  const storeConfig = useGetStoreConfig();\n\n  const {\n    order,\n    itemsEligibleForReturn,\n    formsRef,\n    attributesList,\n    steps,\n    loading,\n    selectedProductList,\n    handleSelectedProductList,\n    handleSetQuantity,\n    handleChangeStep,\n    onSubmit,\n  } = useCreateReturn({\n    orderData,\n    onSuccess,\n    onError,\n    handleSetInLineAlert,\n  });\n\n  if (loading)\n    return (\n      <div>\n        <OrderProductListSkeleton />\n      </div>\n    );\n\n  if (!loading && !attributesList.length) return <div />;\n\n  const placeholderImage = storeConfig?.baseMediaUrl ?? '';\n\n  const renderList: Record<StepsTypes, h.JSX.Element | null> = {\n    products: (\n      <ReturnOrderProductList\n        itemsEligibleForReturn={itemsEligibleForReturn}\n        placeholderImage={placeholderImage}\n        taxConfig={setTaxStatus(storeConfig?.shoppingOrderDisplayPrice ?? 0)}\n        slots={slots}\n        translations={translations}\n        loading={loading}\n        selectedProductList={selectedProductList}\n        handleSelectedProductList={handleSelectedProductList}\n        showConfigurableOptions={showConfigurableOptions}\n        handleSetQuantity={handleSetQuantity}\n        handleChangeStep={handleChangeStep}\n      />\n    ),\n    attributes: (\n      <ReturnReasonForm\n        placeholderImage={placeholderImage}\n        slots={slots}\n        formsRef={formsRef}\n        loading={loading}\n        fieldsConfig={attributesList}\n        selectedProductList={selectedProductList}\n        handleChangeStep={handleChangeStep}\n        translations={translations}\n        onSubmit={onSubmit}\n      />\n    ),\n    success: (\n      <ReturnOrderMessage\n        translations={translations}\n        routeReturnSuccess={routeReturnSuccess}\n        orderData={order as OrderDataModel}\n      />\n    ),\n    error: null,\n  };\n\n  return (\n    <div className={classes(['order-create-return', className])}>\n      <Header title={translations.headerText} />\n      {inLineAlertProps.heading ? (\n        <InLineAlert\n          className=\"order-create-return_notification\"\n          variant=\"secondary\"\n          data-testid=\"orderCreateReturnNotification\"\n          {...inLineAlertProps}\n        />\n      ) : null}\n      {renderList[steps]}\n    </div>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { FunctionComponent } from 'preact';\nimport { ReturnOrderMessageProps } from '@/order/types/createReturn.types';\nimport '@/order/components/ReturnOrderMessage/ReturnOrderMessage.css';\nimport { Button } from '@adobe-commerce/elsie/components';\n\nexport const ReturnOrderMessage: FunctionComponent<ReturnOrderMessageProps> = ({\n  routeReturnSuccess,\n  translations,\n  orderData,\n}) => {\n  return (\n    <div className={'order-return-order-message'}>\n      <p className={'order-return-order-message__title'}>\n        {translations.successTitle}\n      </p>\n      <p className={'order-return-order-message__subtitle'}>\n        {translations.successMessage}\n      </p>\n      <Button href={routeReturnSuccess?.(orderData) ?? '#'}>\n        {translations.backStore}\n      </Button>\n    </div>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { FunctionComponent } from 'preact';\nimport { Button, Checkbox } from '@adobe-commerce/elsie/components';\nimport { ReturnOrderProductListProps } from '@/order/types/createReturn.types';\nimport { CartSummaryItem } from '@/order/components';\nimport { OrderItemModel } from '@/order/data/models';\nimport { classes, Slot } from '@adobe-commerce/elsie/lib';\nimport '@/order/components/ReturnOrderProductList/ReturnOrderProductList.css';\n\nexport const ReturnOrderProductList: FunctionComponent<\n  ReturnOrderProductListProps\n> = ({\n  placeholderImage,\n  itemsEligibleForReturn,\n  slots,\n  loading,\n  taxConfig,\n  translations,\n  selectedProductList,\n  handleSelectedProductList,\n  showConfigurableOptions,\n  handleSetQuantity,\n  handleChangeStep,\n}) => {\n  return (\n    <ul className={'order-return-order-product-list'}>\n      {itemsEligibleForReturn?.map((item, index) => {\n        const { quantityReturnRequested, quantityShipped, eligibleForReturn } =\n          item;\n\n        const checked = selectedProductList.some(\n          (el: OrderItemModel) =>\n            el?.productSku === item.productSku && item.eligibleForReturn\n        );\n        const disabled =\n          (quantityShipped === quantityReturnRequested && eligibleForReturn) ||\n          !eligibleForReturn;\n\n        const totalQuantity =\n          quantityShipped - quantityReturnRequested === 0\n            ? quantityReturnRequested\n            : quantityShipped - quantityReturnRequested;\n\n        return (\n          <li\n            key={item.id}\n            className={classes([\n              'order-return-order-product-list__item',\n              ['order-return-order-product-list__item--blur', disabled],\n            ])}\n          >\n            <Checkbox\n              data-testid={`key_${index}`}\n              name={`key_${index}`}\n              checked={checked}\n              disabled={disabled}\n              onChange={() => {\n                handleSelectedProductList({\n                  ...item,\n                  currentReturnOrderQuantity: 1,\n                });\n              }}\n            />\n            <CartSummaryItem\n              slots={slots}\n              placeholderImage={placeholderImage}\n              loading={loading}\n              product={{ ...item, totalQuantity: totalQuantity || 1 }}\n              itemType={''}\n              taxConfig={taxConfig}\n              translations={translations}\n              showConfigurableOptions={showConfigurableOptions}\n              disabledIncrementer={!checked}\n              onQuantity={\n                totalQuantity > 1\n                  ? (value) => {\n                      handleSetQuantity(value, item.productSku!);\n                    }\n                  : undefined\n              }\n            />\n            <Slot\n              data-testid=\"returnOrderItem\"\n              name=\"ReturnOrderItem\"\n              slot={slots?.ReturnOrderItem}\n            />\n          </li>\n        );\n      })}\n      <li className=\"order-return-order-product-list__item\">\n        <Button\n          type=\"button\"\n          onClick={() => handleChangeStep('attributes')}\n          disabled={!selectedProductList.length}\n        >\n          {translations.nextStep}\n        </Button>\n      </li>\n    </ul>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { Fragment, FunctionComponent } from 'preact';\nimport { Button, CartItem, Image } from '@adobe-commerce/elsie/components';\nimport { useForm } from '@/order/hooks/components/useForm';\nimport FormInputs from '../Form/FormInputs';\nimport {\n  modifyFieldsConfig,\n  replicateEntries,\n} from '@/order/lib/returnOrdersHelper';\nimport '@/order/components/ReturnReasonForm/ReturnReasonForm.css';\nimport { Slot } from '@adobe-commerce/elsie/lib';\nimport { ReturnReasonFormProps } from '@/order/types';\n\nexport const ReturnReasonForm: FunctionComponent<ReturnReasonFormProps> = ({\n  placeholderImage,\n  slots,\n  formsRef,\n  selectedProductList,\n  loading,\n  fieldsConfig,\n  translations,\n  handleChangeStep,\n  onSubmit,\n}) => {\n  const { formData, errors, formRef, handleChange, handleBlur, handleSubmit } =\n    useForm({\n      fieldsConfig: replicateEntries(fieldsConfig, selectedProductList?.length),\n      onSubmit,\n    });\n\n  return (\n    <form\n      className=\"order-return-reason-form\"\n      ref={formRef}\n      onSubmit={handleSubmit}\n      name={'returnReasonForm'}\n    >\n      {selectedProductList.map((orderItem, index) => {\n        const giftCard = orderItem?.giftCard;\n        const product = orderItem?.product;\n        const fieldsList = modifyFieldsConfig(fieldsConfig, index);\n        const formName = `${orderItem?.id}_${index}`;\n        const quantity = orderItem?.currentReturnOrderQuantity! ?? 1;\n\n        const configurations = {\n          ...(orderItem?.currentReturnOrderQuantity\n            ? { [translations.configurationsListQuantity]: quantity }\n            : {}),\n          ...(orderItem.configurableOptions || {}),\n          ...(orderItem.bundleOptions || {}),\n          ...(giftCard?.senderName\n            ? { [translations.sender]: giftCard?.senderName }\n            : {}),\n          ...(giftCard?.senderEmail\n            ? { [translations.sender]: giftCard?.senderEmail }\n            : {}),\n          ...(giftCard?.recipientName\n            ? { [translations.recipient]: giftCard?.recipientName }\n            : {}),\n          ...(giftCard?.recipientEmail\n            ? { [translations.recipient]: giftCard?.recipientEmail }\n            : {}),\n          ...(giftCard?.message\n            ? { [translations.message]: giftCard?.message }\n            : {}),\n          ...(orderItem?.downloadableLinks\n            ? {\n                [`${orderItem?.downloadableLinks?.count} ${translations.downloadableCount}`]:\n                  orderItem?.downloadableLinks?.result,\n              }\n            : {}),\n        };\n\n        const productName = orderItem?.product?.name;\n\n        const defaultImageProps = {\n          title: productName,\n          src: product?.thumbnail?.url ?? placeholderImage,\n          alt: productName,\n          width: 90,\n          height: 120,\n          loading: 'lazy',\n        } as const;\n\n        return (\n          <Fragment key={orderItem.id}>\n            <CartItem\n              loading={loading}\n              title={<div data-testid=\"product-name\">{productName}</div>}\n              sku={<div>{product?.sku}</div>}\n              image={\n                <Slot\n                  name=\"ReturnReasonFormImage\"\n                  slot={slots?.ReturnReasonFormImage}\n                  context={{\n                    data: orderItem,\n                    defaultImageProps,\n                  }}\n                >\n                  <Image {...defaultImageProps} />\n                </Slot>\n              }\n              configurations={configurations}\n            />\n            <form\n              name={formName}\n              ref={formsRef?.current[index]}\n              data-quantity={quantity}\n            >\n              <FormInputs\n                className={'className'}\n                loading={loading}\n                fields={fieldsList}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                errors={errors}\n                values={formData}\n              />\n            </form>\n          </Fragment>\n        );\n      })}\n      <Slot\n        data-testid=\"returnFormActions\"\n        name=\"ReturnFormActions\"\n        slot={slots?.ReturnFormActions}\n        context={{\n          handleChangeStep,\n        }}\n      >\n        <div className=\"order-return-reason-form__actions\">\n          <Button\n            variant=\"secondary\"\n            type=\"button\"\n            onClick={() => {\n              handleChangeStep('products');\n            }}\n          >\n            {translations.backStep}\n          </Button>\n          <Button>{translations.submit}</Button>\n        </div>\n      </Slot>\n    </form>\n  );\n};\n"],"names":["SvgWarning","props","React","SvgCheckWithCircle","useCreateReturn","onSuccess","onError","handleSetInLineAlert","orderData","isGuestCreateReturn","setIsGuestCreateReturn","useState","order","setOrder","steps","setSteps","loading","setLoading","selectedProductList","setSelectedProductList","attributesList","setAttributesList","itemsEligibleForReturn","setItemsEligibleForReturn","formsRef","useRef","_","i","createRef","useEffect","event","events","sortedReturnItems","sortItemsByCondition","_a","getQueryParam","getAttributesList","response","handleSelectedProductList","useCallback","orderItem","currentList","item","handleChangeStep","value","handleSetQuantity","productSku","result","el","onSubmit","isValid","orderReturnInfo","items","processFormElement","requestGuestReturn","error","requestReturn","iconsList","Success","Warning","Error","useInLineAlert","inLineAlertProps","setInLineAlertProps","notification","icon","jsx","Icon","CreateReturn","className","slots","routeReturnSuccess","showConfigurableOptions","translations","useText","storeConfig","useGetStoreConfig","OrderProductListSkeleton","placeholderImage","renderList","ReturnOrderProductList","setTaxStatus","ReturnReasonForm","ReturnOrderMessage","jsxs","classes","Header","InLineAlert","Button","taxConfig","index","quantityReturnRequested","quantityShipped","eligibleForReturn","checked","disabled","totalQuantity","Checkbox","CartSummaryItem","Slot","fieldsConfig","formData","errors","formRef","handleChange","handleBlur","handleSubmit","useForm","replicateEntries","giftCard","product","fieldsList","modifyFieldsConfig","formName","quantity","configurations","_b","productName","_c","defaultImageProps","_d","Fragment","CartItem","Image","FormInputs"],"mappings":"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","x_google_ignoreList":[0,1]}