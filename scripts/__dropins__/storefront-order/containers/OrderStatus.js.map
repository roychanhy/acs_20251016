{"version":3,"file":"OrderStatus.js","sources":["/@dropins/storefront-order/src/types/api/getOrderDetails.types.ts","/@dropins/storefront-order/src/components/OrderActions/OrderActions.tsx","/@dropins/storefront-order/src/hooks/containers/useOrderStatus.tsx","/@dropins/storefront-order/src/lib/removeQueryParams.ts","/@dropins/storefront-order/src/hooks/containers/useOrderActions.tsx","/@dropins/storefront-order/src/containers/OrderStatus/OrderStatus.tsx","/@dropins/storefront-order/src/components/OrderCancel/OrderCancel.tsx","/@dropins/storefront-order/src/components/OrderStatusContent/OrderStatusContent.tsx","/@dropins/storefront-order/src/components/Reorder/Reorder.tsx"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport type QueryType = 'orderData';\n\nexport interface UserAddressesProps {\n  city?: string;\n  company?: string;\n  country_code?: string;\n  fax?: string;\n  firstname?: string;\n  lastname?: string;\n  middlename?: string;\n  postcode?: string;\n  prefix?: string;\n  region?: string;\n  region_id?: number;\n  street?: string[];\n  suffix?: string;\n  telephone?: string;\n  vat_id?: string;\n}\n\ninterface ThumbnailImageProps {\n  url?: string;\n  label?: string;\n}\n\nexport interface ProductProps {\n  only_x_left_in_stock?: number;\n  stock_status?: string;\n  thumbnail?: ThumbnailImageProps;\n  image: ThumbnailImageProps;\n  canonical_url: string;\n  url_key: string;\n  id: string;\n  uid: string;\n  name: string;\n  __typename: string;\n  sku: string;\n  price_range: {\n    maximum_price: {\n      regular_price: MoneyProps;\n    };\n  };\n}\n\nexport interface MoneyProps {\n  value: number;\n  currency: string;\n}\n\ninterface GrandTotalProps extends MoneyProps {}\ninterface GrandTotalExclTaxProps extends MoneyProps {}\ninterface SubtotalProps extends MoneyProps {}\ninterface TotalTaxProps extends MoneyProps {}\ninterface TaxAmountProps extends MoneyProps {}\ninterface TotalShippingProps extends MoneyProps {}\n\ninterface TaxDetailProps {\n  amount?: TaxAmountProps;\n  rate?: number;\n  title?: string;\n}\n\nexport interface DiscountProps {\n  amount: MoneyProps;\n  label: string;\n}\n\nexport interface TotalGiftOptionsProps {\n  gift_wrapping_for_items: MoneyProps;\n  gift_wrapping_for_items_incl_tax: MoneyProps;\n  gift_wrapping_for_order_incl_tax: MoneyProps;\n  gift_wrapping_for_order: MoneyProps;\n  printed_card: MoneyProps;\n  printed_card_incl_tax: MoneyProps;\n}\n\nexport interface TotalProps {\n  total_giftcard?: MoneyProps;\n  grand_total?: GrandTotalProps;\n  grand_total_excl_tax?: GrandTotalExclTaxProps;\n  subtotal?: SubtotalProps;\n  taxes?: TaxDetailProps[];\n  total_tax?: TotalTaxProps;\n  total_shipping?: TotalShippingProps;\n  discounts?: DiscountProps[];\n  gift_options: TotalGiftOptionsProps;\n}\n\ninterface InvoiceItemInterface {}\n\ninterface InvoiceProps {\n  id?: string;\n  number?: string;\n  total?: TotalProps;\n  items?: InvoiceItemInterface[];\n  comments?: { message: string; timestamp: string }[];\n}\n\nexport interface GiftMessageProps {\n  form: string;\n  message: string;\n  to: string;\n}\nexport interface GiftWrappingProps {\n  design: string;\n  price: MoneyProps;\n  uid: string;\n  image: { url: string; label: string };\n}\n\nexport interface giftCardProps {\n  sender_name: string;\n  sender_email: string;\n  recipient_email: string;\n  recipient_name: string;\n  message: string;\n}\n\nexport interface OrderItemProps {\n  __typename: string;\n  discounts: DiscountProps[];\n  eligible_for_return: boolean;\n  entered_options: { label: string; value: string }[];\n  gift_message: GiftMessageProps;\n  gift_wrapping: GiftWrappingProps;\n  id: string;\n  product: ProductProps;\n  product_name: string;\n  product_sale_price: MoneyProps;\n  product_sku: string;\n  product_type: string;\n  product_url_key: string;\n  quantity_canceled: number;\n  quantity_invoiced: number;\n  quantity_ordered: number;\n  quantity_refunded: number;\n  quantity_returned: number;\n  quantity_shipped: number;\n  quantity_return_requested: number;\n  selected_options: { label: string; value: string }[];\n  bundle_options: any;\n  status: string;\n  gift_card?: giftCardProps;\n  downloadable_links: { title: string }[];\n  prices: {\n    price_including_tax: MoneyProps;\n    original_price: MoneyProps;\n    original_price_including_tax: MoneyProps;\n    price: MoneyProps;\n    discounts: [\n      {\n        label: string;\n        amount: {\n          value: number;\n        };\n      }\n    ];\n  };\n}\n\nexport interface PaymentMethodsProps {\n  name: string;\n  type: string;\n  additional_data: {\n    name: string;\n    value: string;\n  }[];\n}\n\nexport interface ShipmentsProps {\n  id: string;\n  number: string;\n  tracking: { carrier: string; number: string; title: string }[];\n  comments: { message: string; timestamp: string }[];\n  items: {\n    id: string;\n    product_sku: string;\n    product_name: string;\n    quantity_shipped: number;\n    order_item: OrderItemProps;\n  }[];\n}\n\nexport enum AvailableActionsProps {\n  CANCEL = 'CANCEL',\n  RETURN = 'RETURN',\n  REORDER = 'REORDER',\n}\n\nexport interface ReturnsItemsProps {\n  number: string;\n  status: string;\n  created_at: string;\n  order: {\n    number: string;\n    token: string;\n  };\n  shipping: {\n    tracking: {\n      status: {\n        text: string;\n        type: string;\n      };\n      carrier: {\n        uid: string;\n        label: string;\n      };\n      tracking_number: string;\n    }[];\n  };\n  items: {\n    quantity: number;\n    status: string;\n    uid: string;\n    request_quantity: number;\n    order_item: OrderItemProps;\n  }[];\n}\nexport interface OrderProps {\n  is_virtual?: boolean;\n  order_status_change_date?: string;\n  available_actions: AvailableActionsProps[];\n  shipping_method: string;\n  status: string;\n  token: string;\n  carrier: string;\n  email: string;\n  gift_receipt_included: boolean;\n  id: string;\n  number: string;\n  order_date: string;\n  printed_card_included: boolean;\n  applied_coupons: { code: string }[];\n  returns: {\n    __typename: string;\n    items: ReturnsItemsProps[];\n  };\n  shipments: ShipmentsProps[];\n  items_eligible_for_return: OrderItemProps[];\n  items: OrderItemProps[];\n  gift_wrapping: GiftWrappingProps;\n  gift_message: GiftMessageProps;\n  payment_methods: PaymentMethodsProps[];\n  invoices: InvoiceProps[];\n  shipping_address: UserAddressesProps;\n  billing_address: UserAddressesProps;\n  total?: TotalProps;\n  applied_gift_cards: {\n    code: string;\n    applied_balance: MoneyProps;\n  }[];\n}\n\nexport interface ErrorProps {\n  errors?: {\n    message?: string;\n  }[];\n}\n\ntype GetOrderDetailsByParams<T extends QueryType> = {\n  orderId?: string;\n  returnRef?: string;\n  queryType: T;\n  returnsPageSize?: number;\n};\n\nexport interface GetOrderDetailsByIdProps\n  extends GetOrderDetailsByParams<QueryType> {}\n\nexport interface OrdersResponse extends ErrorProps {\n  data?: {\n    customer?: {\n      orders?: {\n        items?: OrderProps[];\n      };\n    };\n  };\n}\n\nexport interface OrderByNumberResponse extends OrdersResponse {}\n\nexport type ResponseData<T extends QueryType> = T extends\n  | 'orderData'\n  | 'orderSummary'\n  | 'orderStatus'\n  ? OrderByNumberResponse\n  : never;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { FunctionComponent } from 'preact';\nimport { useMemo } from 'preact/compat';\nimport { classes, Slot } from '@adobe-commerce/elsie/lib';\nimport { AvailableActionsProps, OrderActionsProps } from '@/order/types';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { Button } from '@adobe-commerce/elsie/components';\nimport { redirectTo } from '@/order/lib/redirectTo';\nimport '@/order/components/OrderActions/OrderActions.css';\nimport { OrderCancel, Reorder } from '@/order/components';\n\nexport const OrderActions: FunctionComponent<OrderActionsProps> = ({\n  className,\n  orderData,\n  slots,\n  routeCreateReturn,\n  routeOnSuccess,\n  onError,\n}) => {\n  const translationActions = useText({\n    cancel: 'Order.OrderStatusContent.actions.cancel',\n    createReturn: 'Order.OrderStatusContent.actions.createReturn',\n    createAnotherReturn: 'Order.OrderStatusContent.actions.createAnotherReturn',\n    reorder: 'Order.OrderStatusContent.actions.reorder',\n  });\n\n  const renderAvailableActions = useMemo(() => {\n    const availableActionsList = orderData?.availableActions;\n    const isEmpty = !!availableActionsList?.length;\n    const isReturnPage = !!orderData?.returnNumber;\n\n    const redirectToCreateReturn = () => {\n      redirectTo(routeCreateReturn, {}, orderData);\n    };\n\n    return (\n      <>\n        {slots?.OrderActions ? (\n          <Slot\n            data-testid=\"OrderActionsSlot\"\n            name=\"OrderCanceledActions\"\n            slot={slots?.OrderActions}\n            context={orderData}\n          />\n        ) : (\n          <div\n            data-testid=\"availableActionsList\"\n            className={classes([\n              'order-order-actions__wrapper',\n              ['order-order-actions__wrapper--empty', !isEmpty],\n            ])}\n          >\n            {(availableActionsList as AvailableActionsProps[])?.map(\n              (action: string) => {\n                switch (action) {\n                  case AvailableActionsProps.CANCEL:\n                    // Cancel action should not be available on return details page\n                    return (\n                      <>\n                        {!isReturnPage ? (\n                          <OrderCancel\n                            orderRef={orderData?.token! || orderData?.id!}\n                          />\n                        ) : null}\n                      </>\n                    );\n                  case AvailableActionsProps.RETURN:\n                    return (\n                      <Button\n                        variant=\"secondary\"\n                        onClick={redirectToCreateReturn}\n                      >\n                        {isReturnPage\n                          ? translationActions.createAnotherReturn\n                          : translationActions.createReturn}\n                      </Button>\n                    );\n                  case AvailableActionsProps.REORDER:\n                    // Reorder action should not be available on return details page\n                    return (\n                      <>\n                        {!isReturnPage ? (\n                          <Reorder\n                            orderData={orderData}\n                            onError={onError}\n                            routeOnSuccess={routeOnSuccess}\n                          >\n                            {translationActions.reorder}\n                          </Reorder>\n                        ) : null}\n                      </>\n                    );\n                }\n              }\n            )}\n          </div>\n        )}\n      </>\n    );\n  }, [\n    onError,\n    orderData,\n    routeOnSuccess,\n    routeCreateReturn,\n    slots,\n    translationActions,\n  ]);\n\n  return (\n    <div className={classes(['order-order-actions', className])}>\n      {renderAvailableActions}\n    </div>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { OrderDataModel } from '@/order/data/models';\nimport { StatusEnumProps, UseOrderStatusProps } from '@/order/types';\nimport { events } from '@adobe-commerce/event-bus';\nimport { useEffect, useState } from 'preact/hooks';\n\nexport const useOrderStatus = ({ orderData }: UseOrderStatusProps) => {\n  const [order, setOrder] = useState(orderData);\n  const [orderStatus, setOrderStatus] = useState<StatusEnumProps>(\n    orderData?.status as StatusEnumProps\n  );\n\n  useEffect(() => {\n    const event = events.on(\n      'order/data',\n      (order: OrderDataModel) => {\n        setOrder(order);\n        setOrderStatus(order.status as StatusEnumProps);\n      },\n      { eager: true }\n    );\n\n    return () => {\n      event?.off();\n    };\n  }, []);\n\n  return { orderStatus, order };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const removeQueryParams = (params: string[]) => {\n  const url = new URL(window.location.href);\n\n  params.forEach((param) => {\n    if (url.searchParams.has(param)) {\n      url.searchParams.delete(param);\n    }\n  });\n\n  window.history.replaceState({}, document.title, url.toString());\n};\n","/********************************************************************\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { useCallback, useEffect, useState } from 'preact/hooks';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { UseOrderActionsProps } from '@/order/types';\nimport { confirmGuestReturn, confirmCancelOrder } from '@/order/api';\nimport { removeQueryParams } from '@/order/lib/removeQueryParams';\n\nexport const useOrderActions = ({\n  enableOrderCancellation,\n}: UseOrderActionsProps) => {\n  const translations = useText({\n    cancelOrderHeading: 'Order.OrderStatusContent.actions.cancel',\n    confirmGuestReturnHeading:\n      'Order.OrderStatusContent.actions.confirmGuestReturn',\n    orderCancelled: 'Order.OrderStatusContent.orderCanceled.message',\n    guestRequestReturnMessage:\n      'Order.OrderStatusContent.actions.confirmGuestReturnMessage',\n  });\n  const [isDismissed, setIsDismissed] = useState<boolean>(false);\n  const [isExecuted, setIsExecuted] = useState<boolean>(false);\n  const [orderActionStatus, setOrderActionStatus] = useState<{\n    heading: string;\n    text: string;\n    status: 'success' | 'error' | 'warning' | undefined;\n  }>({\n    heading: '',\n    text: '',\n    status: undefined,\n  });\n\n  const onDismiss = useCallback(() => {\n    setIsDismissed(true);\n    removeQueryParams(['order_id', 'confirmation_key', 'action']);\n  }, []);\n\n  const triggerAlertOnDismiss = useCallback(\n    (\n      heading: string,\n      text: string,\n      status: 'success' | 'error' | 'warning' | undefined\n    ) => {\n      setOrderActionStatus({\n        heading,\n        text,\n        status,\n      });\n\n      removeQueryParams(['action']);\n    },\n    []\n  );\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const orderId = params.get('order_id') ?? '';\n    const confirmationKey = params.get('confirmation_key') ?? '';\n    const actionType = params.get('action') ?? '';\n\n    if (isExecuted || !orderId || !confirmationKey || !actionType) return;\n\n    if (enableOrderCancellation && actionType === 'cancel') {\n      setIsExecuted(true);\n      confirmCancelOrder(orderId, confirmationKey)\n        .then(() => {\n          setOrderActionStatus({\n            heading: translations.cancelOrderHeading,\n            text: translations.orderCancelled,\n            status: 'success',\n          });\n        })\n        .catch((error) => {\n          setOrderActionStatus({\n            heading: translations.cancelOrderHeading,\n            text: error.message,\n            status: 'warning',\n          });\n        });\n    }\n\n    if (actionType === 'return') {\n      setIsExecuted(true);\n      confirmGuestReturn(orderId, confirmationKey)\n        .then(() => {\n          setOrderActionStatus({\n            heading: translations.confirmGuestReturnHeading,\n            text: translations.guestRequestReturnMessage,\n            status: 'success',\n          });\n        })\n        .catch((error) => {\n          setOrderActionStatus({\n            heading: translations.confirmGuestReturnHeading,\n            text: error.message,\n            status: 'warning',\n          });\n        });\n    }\n  }, [\n    enableOrderCancellation,\n    translations,\n    triggerAlertOnDismiss,\n    isExecuted,\n  ]);\n\n  return {\n    orderActionStatus,\n    isDismissed,\n    onDismiss,\n  };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { CardLoader, OrderStatusContent } from '@/order/components';\nimport { OrderStatusProps } from '@/order/types';\nimport { classes, Container } from '@adobe-commerce/elsie/lib';\nimport {\n  useOrderActions,\n  useGetStoreConfig,\n  useOrderStatus,\n} from '@/order/hooks';\nimport { InLineAlert } from '@adobe-commerce/elsie/components';\n\nexport const OrderStatus: Container<OrderStatusProps> = ({\n  slots,\n  orderData,\n  className,\n  statusTitle,\n  status,\n  routeCreateReturn,\n  onError,\n  routeOnSuccess,\n}) => {\n  const { orderStatus, order } = useOrderStatus({ orderData });\n\n  const storeConfig = useGetStoreConfig();\n\n  const { orderActionStatus, isDismissed, onDismiss } = useOrderActions({\n    enableOrderCancellation: storeConfig?.orderCancellationEnabled,\n  });\n\n  return (\n    <div className={classes(['order-order-status', className])}>\n      {!isDismissed && orderActionStatus?.status !== undefined ? (\n        <InLineAlert\n          style={{ marginBottom: '1rem' }}\n          heading={orderActionStatus.heading}\n          onDismiss={onDismiss}\n          description={orderActionStatus.text}\n          type={orderActionStatus.status}\n        />\n      ) : null}\n      {order ? (\n        <OrderStatusContent\n          title={statusTitle}\n          status={status || orderStatus}\n          slots={slots}\n          orderData={order}\n          routeCreateReturn={routeCreateReturn}\n          onError={onError}\n          routeOnSuccess={routeOnSuccess}\n        />\n      ) : (\n        <CardLoader withCard={false} />\n      )}\n    </div>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { Button, Modal, PickerOption } from '@adobe-commerce/elsie/components';\nimport { OrderCancelProps } from '@/order/types';\nimport { useGetStoreConfig } from '@/order/hooks/api/useGetStoreConfig';\nimport { OrderCancellationReason } from '@/order/data/models';\nimport { OrderCancelForm } from '@/order/containers';\nimport { useState } from 'preact/hooks';\nimport { Text } from '@adobe-commerce/elsie/i18n';\nimport { events } from '@adobe-commerce/event-bus';\nimport '@/order/components/OrderCancel/OrderCancel.css';\nimport { FunctionComponent } from 'preact';\n\nexport const OrderCancel: FunctionComponent<OrderCancelProps> = ({\n  orderRef,\n}) => {\n  const [isCancelReasonsModalVisible, setIsCancelReasonsModalVisible] =\n    useState(false);\n\n  const handleOpen = () => {\n    setIsCancelReasonsModalVisible(true);\n  };\n  const handleClose = () => {\n    setIsCancelReasonsModalVisible(false);\n  };\n\n  const storeConfig = useGetStoreConfig();\n  const orderCancellationReasons = storeConfig?.orderCancellationReasons ?? [];\n\n  const transformCancelReasons = (\n    reasons: OrderCancellationReason[]\n  ): PickerOption[] => {\n    return reasons.map((reason, index) => {\n      return {\n        text: reason?.description,\n        value: index.toString(),\n      };\n    });\n  };\n\n  events.on('order/data', (orderData) => {\n    const status = String(orderData.status).toLocaleLowerCase();\n    if (\n      status === 'guest order cancellation requested' ||\n      status === 'canceled'\n    ) {\n      handleClose();\n    }\n  });\n\n  return (\n    <>\n      <Button\n        variant=\"secondary\"\n        onClick={handleOpen}\n        data-testid=\"cancel-button\"\n      >\n        <Text id={'Order.OrderStatusContent.actions.cancel'} />\n      </Button>\n      {isCancelReasonsModalVisible && (\n        <Modal\n          centered={true}\n          size=\"medium\"\n          onClose={handleClose}\n          className={'order-order-cancel__modal'}\n          title={\n            <h2 className={'order-order-cancel__title'}>\n              <Text id={'Order.OrderCancelForm.title'} />\n            </h2>\n          }\n          data-testid=\"order-cancellation-reasons-modal\"\n        >\n          <OrderCancelForm\n            orderRef={orderRef}\n            cancelReasons={transformCancelReasons(orderCancellationReasons)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { FunctionComponent } from 'preact';\nimport { Card, Header } from '@adobe-commerce/elsie/components';\nimport { OrderStatusContentProps, StatusEnumProps } from '@/order/types';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { OrderActions } from '@/order/components';\nimport { formatReturnStatus } from '@/order/lib/returnOrdersHelper';\nimport { classes } from '@adobe-commerce/elsie/lib';\nimport { formatDateToLocale } from '@/order/lib/formatDateToLocale';\nimport '@/order/components/OrderStatusContent/OrderStatusContent.css';\nimport { capitalizeFirst } from '@/order/lib/capitalizeFirst';\n\nconst statusTransform: Record<string, string> = {\n  pending: 'orderPending',\n  shiping: 'orderShipped',\n  complete: 'orderComplete',\n  processing: 'orderProcessing',\n  'on hold': 'orderOnHold',\n  canceled: 'orderCanceled',\n  'suspected fraud': 'orderSuspectedFraud',\n  'payment Review': 'orderPaymentReview',\n  'order received': 'orderReceived',\n  'guest order cancellation requested': 'guestOrderCancellationRequested',\n  'pending payment': 'orderPendingPayment',\n  rejected: 'orderRejected',\n  authorized: 'orderAuthorized',\n  'paypal canceled reversal': 'orderPaypalCanceledReversal',\n  'pending paypal': 'orderPendingPaypal',\n  'paypal reversed': 'orderPaypalReversed',\n  closed: 'orderClosed',\n};\n\nexport const OrderStatusContent: FunctionComponent<OrderStatusContentProps> = ({\n  slots,\n  title,\n  status,\n  orderData,\n  routeCreateReturn,\n  onError,\n  routeOnSuccess,\n}) => {\n  const isReturnPage = !!orderData?.returnNumber;\n  const orderStatus = String(status).toLocaleLowerCase();\n  const orderReturn = orderData?.returns?.[0];\n  const orderReturnStatus = orderReturn?.returnStatus ?? '';\n  const createdReturnAt = orderReturn?.createdReturnAt ?? '';\n\n  const translationsPlaceholder = useText({\n    message: 'Order.OrderStatusContent.orderPlaceholder.message',\n    messageWithoutDate:\n      'Order.OrderStatusContent.orderPlaceholder.messageWithoutDate',\n  });\n\n  const translationsHeader = useText(\n    `Order.OrderStatusContent.${\n      statusTransform[orderStatus as StatusEnumProps]\n    }.title`\n  );\n\n  const translationsMessage = useText(\n    `Order.OrderStatusContent.${\n      statusTransform[orderStatus as StatusEnumProps]\n    }.message`\n  );\n\n  const translationsMessageWithoutDate = useText(\n    `Order.OrderStatusContent.${\n      statusTransform[orderStatus as StatusEnumProps]\n    }.messageWithoutDate`\n  );\n\n  const translationsReturn = useText({\n    title: `Order.OrderStatusContent.returnStatus.${formatReturnStatus(\n      orderReturnStatus\n    )}`,\n    returnMessage: 'Order.OrderStatusContent.returnMessage',\n  });\n\n  if (!status) return <div />;\n\n  const translationsHeaderTitle = translationsHeader?.title\n    ? translationsHeader\n    : { title: capitalizeFirst(orderStatus) };\n  const translationsText = translationsMessage?.message\n    ? translationsMessage\n    : translationsPlaceholder;\n  const translationsTextWithoutDate =\n    translationsMessageWithoutDate?.messageWithoutDate\n      ? translationsMessageWithoutDate\n      : translationsPlaceholder;\n\n  const orderMessage = orderData?.orderStatusChangeDate\n    ? translationsText?.message.replace(\n        '{DATE}',\n        formatDateToLocale(orderData?.orderStatusChangeDate)\n      )\n    : translationsTextWithoutDate.messageWithoutDate;\n\n  const returnMessage =\n    translationsReturn?.returnMessage\n      ?.replace(\n        '{ORDER_CREATE_DATE}',\n        formatDateToLocale(orderData?.orderDate!)\n      )\n      ?.replace('{RETURN_CREATE_DATE}', formatDateToLocale(createdReturnAt)) ??\n    '';\n\n  const headerTitle = isReturnPage\n    ? title ?? (translationsReturn.title || capitalizeFirst(orderReturnStatus))\n    : title ?? translationsHeaderTitle.title;\n\n  return (\n    <Card className=\"order-order-status-content\" variant=\"secondary\">\n      <Header title={headerTitle} />\n      <div className=\"order-order-status-content__wrapper\">\n        <div\n          className={classes([\n            'order-order-status-content__wrapper-description',\n            [\n              'order-order-status-content__wrapper-description--actions-slot',\n              !!slots?.OrderActions,\n            ],\n          ])}\n        >\n          <p>{isReturnPage ? returnMessage : orderMessage}</p>\n        </div>\n        <OrderActions\n          orderData={orderData}\n          slots={slots}\n          routeCreateReturn={routeCreateReturn}\n          routeOnSuccess={routeOnSuccess}\n          onError={onError}\n        />\n      </div>\n    </Card>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { FunctionComponent } from 'preact';\nimport { Button } from '@adobe-commerce/elsie/components';\nimport { redirectTo } from '@/order/lib/redirectTo';\nimport { reorderItems } from '@/order/api';\nimport { useCallback, useState } from 'preact/hooks';\nimport { ReorderProps } from '@/order/types';\n\nexport const Reorder: FunctionComponent<ReorderProps> = ({\n  onError,\n  routeOnSuccess,\n  orderData,\n  children,\n}) => {\n  const [loading, setLoading] = useState(false);\n\n  const mutationReorderItems = useCallback(() => {\n    setLoading(true);\n    const orderNumber = orderData?.number!;\n\n    reorderItems(orderNumber)\n      .then(({ success, userInputErrors }) => {\n        if (success) {\n          redirectTo(routeOnSuccess, {});\n        }\n\n        if (userInputErrors.length) {\n          onError?.(userInputErrors);\n        }\n      })\n      .catch((error) => {\n        onError?.(error.message as string);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [orderData, routeOnSuccess, onError]);\n\n  return (\n    <Button\n      type=\"button\"\n      disabled={loading}\n      variant=\"secondary\"\n      className={'order-reorder'}\n      onClick={mutationReorderItems}\n    >\n      {children}\n    </Button>\n  );\n};\n"],"names":["AvailableActionsProps","OrderActions","className","orderData","slots","routeCreateReturn","routeOnSuccess","onError","translationActions","useText","renderAvailableActions","useMemo","availableActionsList","isEmpty","isReturnPage","redirectToCreateReturn","redirectTo","jsx","Fragment","Slot","classes","action","OrderCancel","Button","Reorder","useOrderStatus","order","setOrder","useState","orderStatus","setOrderStatus","useEffect","event","events","removeQueryParams","params","url","param","useOrderActions","enableOrderCancellation","translations","isDismissed","setIsDismissed","isExecuted","setIsExecuted","orderActionStatus","setOrderActionStatus","onDismiss","useCallback","triggerAlertOnDismiss","heading","text","status","orderId","confirmationKey","actionType","confirmCancelOrder","error","confirmGuestReturn","OrderStatus","statusTitle","storeConfig","useGetStoreConfig","jsxs","InLineAlert","OrderStatusContent","CardLoader","orderRef","isCancelReasonsModalVisible","setIsCancelReasonsModalVisible","handleOpen","handleClose","orderCancellationReasons","transformCancelReasons","reasons","reason","index","Text","Modal","OrderCancelForm","statusTransform","title","orderReturn","_a","orderReturnStatus","createdReturnAt","translationsPlaceholder","translationsHeader","translationsMessage","translationsMessageWithoutDate","translationsReturn","formatReturnStatus","translationsHeaderTitle","capitalizeFirst","translationsText","translationsTextWithoutDate","orderMessage","formatDateToLocale","returnMessage","_c","_b","headerTitle","Card","Header","children","loading","setLoading","mutationReorderItems","orderNumber","reorderItems","success","userInputErrors"],"mappings":"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"}