{"version":3,"file":"CustomerDetails.js","sources":["../../node_modules/@adobe-commerce/elsie/src/icons/Wallet.svg","../../node_modules/@adobe-commerce/elsie/src/icons/Card.svg","/@dropins/storefront-order/src/components/CustomerDetailsContent/CustomerDetailsContent.tsx","/@dropins/storefront-order/src/configs/defaultAttributePreset.config.ts","/@dropins/storefront-order/src/hooks/containers/useCustomerDetails.tsx","/@dropins/storefront-order/src/containers/CustomerDetails/CustomerDetails.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgWallet = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M17.93 14.8V18.75H5.97C4.75 18.75 3.75 17.97 3.75 17V6.5M3.75 6.5C3.75 5.53 4.74 4.75 5.97 4.75H15.94V8.25H5.97C4.75 8.25 3.75 7.47 3.75 6.5Z\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M19.35 11.64H14.04V14.81H19.35V11.64Z\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M17.9304 11.64V8.25H15.1504\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgWallet;\n","import * as React from \"react\";\nconst SvgCard = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M2.00718 5H22.1507C22.7047 5 23.1579 5.45323 23.1579 6.00718V7.51794C23.1579 7.51794 1.01007 7.58844 1 7.55823V6.00718C1 5.45323 1.45323 5 2.00718 5Z\", stroke: \"currentColor\", strokeWidth: 1 }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M23.1579 9.78409V18.3451C23.1579 18.899 22.7047 19.3523 22.1507 19.3523H2.00718C1.45323 19.3523 1 18.899 1 18.3451V9.78409H23.1579Z\", stroke: \"currentColor\", strokeWidth: 1 }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M3.01465 15.9682H8.40305\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M17.6192 17.5897C18.4535 17.5897 19.1299 16.9133 19.1299 16.0789C19.1299 15.2446 18.4535 14.5682 17.6192 14.5682C16.7848 14.5682 16.1084 15.2446 16.1084 16.0789C16.1084 16.9133 16.7848 17.5897 17.6192 17.5897Z\", stroke: \"currentColor\", strokeWidth: 1 }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M19.8848 17.5897C20.7192 17.5897 21.3956 16.9133 21.3956 16.0789C21.3956 15.2446 20.7192 14.5682 19.8848 14.5682C19.0504 14.5682 18.374 15.2446 18.374 16.0789C18.374 16.9133 19.0504 17.5897 19.8848 17.5897Z\", stroke: \"currentColor\", strokeWidth: 1 }));\nexport default SvgCard;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { FunctionComponent } from 'preact';\nimport { classes, Slot } from '@adobe-commerce/elsie/lib';\nimport {\n  Card,\n  Header,\n  Icon,\n  IconNode,\n  IconType,\n  Price,\n} from '@adobe-commerce/elsie/components';\nimport { Text } from '@adobe-commerce/elsie/i18n';\nimport {\n  CustomerDetailsContentProps,\n  NormalizeAddressProps,\n} from '@/order/types';\nimport { DetailsSkeleton } from '@/order/components';\nimport { Card as CreditCard, Wallet } from '@adobe-commerce/elsie/icons';\nimport { useMemo } from 'preact/hooks';\nimport { formatReturnStatus } from '@/order/lib/returnOrdersHelper';\nimport { formatDateToLocale } from '@/order/lib/formatDateToLocale';\nimport '@/order/components/CustomerDetailsContent/CustomerDetailsContent.css';\n\nconst renderAddressData = (\n  normalizeAddress: {\n    billingAddress: NormalizeAddressProps[][];\n    shippingAddress: NormalizeAddressProps[][];\n  },\n  type: 'shippingAddress' | 'billingAddress'\n) => {\n  const getFieldContent = (field: any) => {\n    const value = Array.isArray(field.value)\n      ? field.value.join(' ')\n      : field?.value;\n    return field.label ? `${field.label}: ${value}` : value;\n  };\n\n  return normalizeAddress[type]?.map((field: any, fieldIndex: number) => {\n    return <p key={`${field.value}${fieldIndex}`}>{getFieldContent(field)}</p>;\n  });\n};\n\nconst extractPaymentMethodsData = (\n  paymentMethods: { code: string; name: string }[]\n) => {\n  const hasPaymentMethod = paymentMethods && paymentMethods.length > 0;\n  const selectedPaymentMethod = hasPaymentMethod ? paymentMethods[0]?.name : '';\n  const selectedPaymentMethodCode = hasPaymentMethod\n    ? paymentMethods[0]?.code\n    : '';\n  const hasToDisplayPaymentMethod =\n    hasPaymentMethod && selectedPaymentMethod !== '';\n  return {\n    selectedPaymentMethod,\n    selectedPaymentMethodCode,\n    hasToDisplayPaymentMethod,\n  };\n};\n\nexport const CustomerDetailsContent: FunctionComponent<\n  CustomerDetailsContentProps\n> = ({\n  loading,\n  order,\n  withHeader = true,\n  title,\n  paymentIconsMap = {},\n  normalizeAddress,\n  translations,\n  slots,\n}) => {\n  const isReturnPage = !!order?.returnNumber;\n  const isVirtual = !!order?.isVirtual;\n  const orderReturn = order?.returns?.[0];\n\n  const iconsList: Record<string, IconType | IconNode> = useMemo(\n    () => ({\n      checkmo: Wallet,\n      card: CreditCard,\n      ...paymentIconsMap,\n    }),\n    [paymentIconsMap]\n  );\n\n  if (!order || loading) return <DetailsSkeleton />;\n\n  const emailAddress = order?.email ?? '';\n  const shippingMethod = order?.shipping?.code;\n  const shippingCost = order?.shipping?.amount;\n  const shippingCurrency = order?.shipping?.currency;\n  const paymentMethods = order?.payments;\n  const {\n    selectedPaymentMethod,\n    selectedPaymentMethodCode,\n    hasToDisplayPaymentMethod,\n  } = extractPaymentMethodsData(paymentMethods);\n  const paymentMethodIconSource = iconsList[selectedPaymentMethodCode];\n  const shippingAddress =\n    renderAddressData(normalizeAddress, 'shippingAddress') ?? [];\n  const billingAddress =\n    renderAddressData(normalizeAddress, 'billingAddress') ?? [];\n\n  const contactDetails = (\n    <div className=\"order-customer-details-content__container-email\">\n      <div className={'order-customer-details-content__container-title'}>\n        {translations?.emailTitle}\n      </div>\n      <p>{emailAddress}</p>\n    </div>\n  );\n\n  const returnDetails = isReturnPage ? (\n    <div\n      className=\"order-customer-details-content__container-return-information\"\n      data-testid=\"returnDetailsBlock\"\n    >\n      <div className={'order-customer-details-content__container-title'}>\n        {translations?.returnInformationTitle}\n      </div>\n      <div className=\"order-customer-details-content__container-description\">\n        <Slot\n          data-testid=\"OrderReturnInformation\"\n          name=\"OrderReturnInformation\"\n          slot={slots?.OrderReturnInformation}\n          context={orderReturn}\n        >\n          <>\n            <p>\n              {translations.createdReturnAt}\n              <span>{formatDateToLocale(orderReturn?.createdReturnAt!)}</span>\n            </p>\n            <p>\n              {translations.returnStatusLabel}\n              <Text\n                id={`Order.CustomerDetails.returnStatus.${formatReturnStatus(\n                  orderReturn?.returnStatus!\n                )}`}\n              />\n            </p>\n            <p>\n              {translations.orderNumberLabel}\n              <span>{orderReturn?.orderNumber}</span>\n            </p>\n          </>\n        </Slot>\n      </div>\n    </div>\n  ) : null;\n\n  const shippingAddressDetails =\n    !isVirtual && shippingAddress.length ? (\n      <div className=\"order-customer-details-content__container-shipping_address\">\n        <div className={'order-customer-details-content__container-title'}>\n          {translations.shippingAddressTitle}\n        </div>\n        <div className=\"order-customer-details-content__container-description\">\n          {shippingAddress}\n        </div>\n      </div>\n    ) : null;\n\n  const billingAddressDetails = billingAddress.length ? (\n    <div\n      className={classes([\n        'order-customer-details-content__container-billing_address',\n        [\n          'order-customer-details-content__container-billing_address--fullwidth',\n          !shippingAddress.length || isVirtual,\n        ],\n      ])}\n    >\n      <div className={'order-customer-details-content__container-title'}>\n        {translations.billingAddressTitle}\n      </div>\n      <div className=\"order-customer-details-content__container-description\">\n        {billingAddress}\n      </div>\n    </div>\n  ) : null;\n\n  const paymentMethodDetails = hasToDisplayPaymentMethod ? (\n    <div\n      className={classes([\n        'order-customer-details-content__container-payment_methods',\n        [\n          'order-customer-details-content__container-payment_methods--fullwidth',\n          !shippingMethod,\n        ],\n      ])}\n    >\n      <div className={'order-customer-details-content__container-title'}>\n        {translations?.paymentMethodsTitle}\n      </div>\n      <p\n        data-testid=\"payment_methods_description\"\n        className={classes([\n          [\n            'order-customer-details-content__container-payment_methods--icon',\n            !!paymentMethodIconSource,\n          ],\n        ])}\n      >\n        <Slot\n          data-testid=\"PaymentMethodIcon\"\n          name=\"PaymentMethodIcon\"\n          slot={slots?.PaymentMethodIcon}\n          context={{ selectedPaymentMethodCode }}\n        >\n          {paymentMethodIconSource ? (\n            <Icon source={paymentMethodIconSource} />\n          ) : null}\n        </Slot>\n        {selectedPaymentMethod}\n      </p>\n    </div>\n  ) : null;\n\n  const shippingMethodDetails = shippingMethod ? (\n    <div className=\"order-customer-details-content__container-shipping_methods\">\n      <div className={'order-customer-details-content__container-title'}>\n        {translations?.shippingMethodsTitle}\n      </div>\n      {shippingCost ? (\n        <p data-testid=\"shipping_methods_price\">\n          <Price amount={shippingCost} currency={shippingCurrency} />{' '}\n          {shippingMethod}\n        </p>\n      ) : (\n        <p data-testid=\"shipping_methods_placeholder\">\n          {translations?.freeShipping}\n        </p>\n      )}\n    </div>\n  ) : null;\n\n  const pageSpecificDetails = isReturnPage ? (\n    returnDetails\n  ) : (\n    <>\n      {billingAddressDetails}\n      {shippingMethodDetails}\n      {paymentMethodDetails}\n    </>\n  );\n\n  return (\n    <Card\n      data-testid=\"order-details\"\n      variant={'secondary'}\n      className={classes(['order-customer-details-content'])}\n    >\n      {withHeader ? <Header title={title ?? translations?.headerText} /> : null}\n\n      <div\n        className={classes([\n          'order-customer-details-content__container',\n          [\n            'order-customer-details-content__container--no-margin',\n            shippingAddress.length || billingAddress.length,\n          ],\n        ])}\n      >\n        {contactDetails}\n        {shippingAddressDetails}\n        {pageSpecificDetails}\n      </div>\n    </Card>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const defaultAttributePreset = [\n  'firstname',\n  'lastname',\n  'city',\n  'company',\n  'country_code',\n  'region',\n  'region_code',\n  'region_id',\n  'telephone',\n  'id',\n  'vat_id',\n  'postcode',\n  'street',\n  'street_2',\n  'default_shipping',\n  'default_billing',\n];\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { getAttributesForm } from '@/order/api';\nimport { defaultAttributePreset } from '@/order/configs/defaultAttributePreset.config';\nimport { OrderDataModel } from '@/order/data/models';\nimport { convertToCamelCase } from '@/order/lib/convertCase';\nimport {\n  KeysSortOrderProps,\n  NormalizeAddressProps,\n  UseCustomerDetails,\n} from '@/order/types';\nimport { events } from '@adobe-commerce/event-bus';\nimport { useState, useEffect, useMemo, useCallback } from 'preact/hooks';\n\nexport const useCustomerDetails = ({ orderData }: UseCustomerDetails) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [order, setOrder] = useState(orderData);\n  const [keysSortOrder, setKeysSortOrder] = useState<KeysSortOrderProps[] | []>(\n    []\n  );\n\n  useEffect(() => {\n    const event = events.on(\n      'order/data',\n      (order: OrderDataModel) => {\n        setOrder(order);\n      },\n      { eager: true }\n    );\n\n    return () => {\n      event?.off();\n    };\n  }, []);\n\n  useEffect(() => {\n    getAttributesForm('shortRequest')\n      .then((attributesFormResponse) => {\n        if (attributesFormResponse) {\n          const result: KeysSortOrderProps[] = attributesFormResponse.map(\n            ({ name, orderNumber, label }) => ({\n              name: convertToCamelCase(name as string),\n              orderNumber,\n              label: !defaultAttributePreset.includes(name as string)\n                ? label\n                : null,\n            })\n          );\n\n          setKeysSortOrder(result);\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const getNormalizeAddress = useCallback(\n    (\n      type: 'billingAddress' | 'shippingAddress'\n    ): NormalizeAddressProps[] | [] => {\n      if (!keysSortOrder.length || !order || !order[type]) return [];\n\n      const address: Record<string, unknown> = order[type]\n        ? Object.fromEntries(\n            Object.entries(order[type] as Record<string, unknown>).map(\n              ([key, value]) => [key.toLowerCase(), value]\n            )\n          )\n        : {};\n\n      // @ts-ignore\n      return keysSortOrder\n        .filter(({ name }) => address[name.toLowerCase()])\n        .map((item) => {\n          return {\n            name: item.name,\n            orderNumber: item.orderNumber,\n            value: address[item.name.toLowerCase()],\n            label: item.label,\n          };\n        });\n    },\n    [keysSortOrder, order]\n  );\n\n  const normalizeAddress = useMemo(\n    () => ({\n      billingAddress: getNormalizeAddress('billingAddress'),\n      shippingAddress: getNormalizeAddress('shippingAddress'),\n    }),\n    [getNormalizeAddress]\n  );\n\n  return { order, normalizeAddress, loading };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { Container, classes } from '@adobe-commerce/elsie/lib';\nimport { useCustomerDetails } from '@/order/hooks';\nimport { CustomerDetailsContent } from '@/order/components';\nimport { CustomerDetailsProps, NormalizeAddressProps } from '@/order/types';\nimport { useText } from '@adobe-commerce/elsie/i18n';\n\nexport const CustomerDetails: Container<CustomerDetailsProps> = ({\n  paymentIconsMap,\n  orderData,\n  title,\n  className,\n  slots,\n}) => {\n  const translations = useText({\n    emailTitle: 'Order.CustomerDetails.email.title',\n    shippingAddressTitle: 'Order.CustomerDetails.shippingAddress.title',\n    shippingMethodsTitle: 'Order.CustomerDetails.shippingMethods.title',\n    billingAddressTitle: 'Order.CustomerDetails.billingAddress.title',\n    paymentMethodsTitle: 'Order.CustomerDetails.paymentMethods.title',\n    returnInformationTitle: 'Order.CustomerDetails.returnInformation.title',\n    headerText: 'Order.CustomerDetails.headerText',\n    freeShipping: 'Order.CustomerDetails.freeShipping',\n    createdReturnAt: 'Order.CustomerDetails.orderReturnLabels.createdReturnAt',\n    orderNumberLabel:\n      'Order.CustomerDetails.orderReturnLabels.orderNumberLabel',\n    returnStatusLabel:\n      'Order.CustomerDetails.orderReturnLabels.returnStatusLabel',\n  });\n\n  const { order, normalizeAddress, loading } = useCustomerDetails({\n    orderData,\n  });\n\n  return (\n    <div className={classes(['order-customer-details', className])}>\n      <CustomerDetailsContent\n        slots={slots}\n        loading={loading}\n        order={order}\n        title={title}\n        paymentIconsMap={paymentIconsMap}\n        normalizeAddress={\n          normalizeAddress as {\n            billingAddress: [] | NormalizeAddressProps[][];\n            shippingAddress: [] | NormalizeAddressProps[][];\n          }\n        }\n        translations={translations}\n      />\n    </div>\n  );\n};\n"],"names":["SvgWallet","props","React","SvgCard","renderAddressData","normalizeAddress","type","getFieldContent","field","value","_a","fieldIndex","jsx","extractPaymentMethodsData","paymentMethods","hasPaymentMethod","selectedPaymentMethod","selectedPaymentMethodCode","_b","CustomerDetailsContent","loading","order","withHeader","title","paymentIconsMap","translations","slots","isReturnPage","isVirtual","orderReturn","iconsList","useMemo","Wallet","CreditCard","DetailsSkeleton","emailAddress","shippingMethod","shippingCost","_c","shippingCurrency","_d","hasToDisplayPaymentMethod","paymentMethodIconSource","shippingAddress","billingAddress","contactDetails","jsxs","returnDetails","Slot","Fragment","formatDateToLocale","Text","formatReturnStatus","shippingAddressDetails","billingAddressDetails","classes","paymentMethodDetails","Icon","shippingMethodDetails","Price","pageSpecificDetails","Card","Header","defaultAttributePreset","useCustomerDetails","orderData","setLoading","useState","setOrder","keysSortOrder","setKeysSortOrder","useEffect","event","events","getAttributesForm","attributesFormResponse","result","name","orderNumber","label","convertToCamelCase","getNormalizeAddress","useCallback","address","key","item","CustomerDetails","className","useText"],"mappings":"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","x_google_ignoreList":[0,1]}