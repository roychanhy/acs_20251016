{"version":3,"file":"OrderLoaders.js","sources":["/@dropins/storefront-order/src/components/OrderLoaders/OrderLoaders.tsx"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport '@/order/components/OrderLoaders/OrderLoaders.css';\nimport {\n  Card,\n  CartItemSkeleton,\n  Skeleton,\n  SkeletonRow,\n} from '@adobe-commerce/elsie/components';\nimport { classes } from '@adobe-commerce/elsie/lib';\n\nexport const CardLoader = ({\n  testId,\n  withCard = true,\n}: {\n  testId?: string;\n  withCard?: boolean;\n}) => {\n  const defaultSkeleton = (\n    <Skeleton data-testid={testId ?? 'skeletonLoader'}>\n      <SkeletonRow\n        variant=\"heading\"\n        size=\"xlarge\"\n        fullWidth={false}\n        lines={1}\n      />\n      <SkeletonRow variant=\"heading\" size=\"xlarge\" fullWidth={true} lines={1} />\n      <SkeletonRow variant=\"heading\" size=\"xlarge\" fullWidth={true} lines={1} />\n    </Skeleton>\n  );\n\n  if (withCard) {\n    return defaultSkeleton;\n  }\n\n  return (\n    <Card\n      variant=\"secondary\"\n      className={classes([\n        'order-order-loaders',\n        'order-order-loaders--card-loader',\n      ])}\n    >\n      {defaultSkeleton}\n    </Card>\n  );\n};\n\nexport const DetailsSkeleton = (props: any) => {\n  return (\n    <Card variant={'secondary'} {...props}>\n      <Skeleton data-testid=\"order-details-skeleton\">\n        <SkeletonRow variant={'heading'} size=\"medium\" fullWidth={true} />\n        <SkeletonRow size=\"medium\" />\n        <SkeletonRow variant={'empty'} size=\"medium\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n      </Skeleton>\n    </Card>\n  );\n};\n\nexport const OrderProductListSkeleton = () => {\n  return (\n    <Skeleton\n      data-testid=\"order-product-list-skeleton\"\n      style={{ gridTemplateColumns: '1fr' }}\n    >\n      <SkeletonRow variant=\"heading\" fullWidth={true} size=\"medium\" />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n    </Skeleton>\n  );\n};\n\nexport const OrderSummarySkeleton = () => {\n  return (\n    <Skeleton\n      data-testid=\"order-cost-summary-content-skeleton\"\n      className={'order-cost-summary-content'}\n    >\n      <SkeletonRow variant=\"heading\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"heading\" size=\"small\" fullWidth={true} lines={3} />\n    </Skeleton>\n  );\n};\n\nexport const OrderHeaderSkeleton = () => {\n  return (\n    <Skeleton data-testid=\"order-header-skeleton\" className=\"order-header\">\n      <SkeletonRow variant=\"empty\" size=\"xlarge\" fullWidth={true} />\n      <SkeletonRow variant=\"empty\" size=\"medium\" />\n      <SkeletonRow variant=\"empty\" size=\"medium\" />\n      <SkeletonRow variant=\"empty\" size=\"medium\" />\n      <SkeletonRow variant=\"empty\" size=\"medium\" />\n      <SkeletonRow variant=\"empty\" size=\"medium\" />\n      <SkeletonRow size=\"small\" fullWidth={true} />\n      <SkeletonRow variant=\"heading\" size=\"xsmall\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n"],"names":["CardLoader","testId","withCard","defaultSkeleton","jsxs","Skeleton","jsx","SkeletonRow","Card","classes","DetailsSkeleton","props","OrderProductListSkeleton","CartItemSkeleton","OrderSummarySkeleton","OrderHeaderSkeleton"],"mappings":"8PAyBO,MAAMA,EAAa,CAAC,CACzB,OAAAC,EACA,SAAAC,EAAW,EACb,IAGM,CACJ,MAAMC,EACJC,EAACC,EAAS,CAAA,cAAaJ,GAAU,iBAC/B,SAAA,CAAAK,EAACC,EAAA,CACC,QAAQ,UACR,KAAK,SACL,UAAW,GACX,MAAO,CAAA,CACT,EACAD,EAACC,GAAY,QAAQ,UAAU,KAAK,SAAS,UAAW,GAAM,MAAO,CAAG,CAAA,EACxED,EAACC,GAAY,QAAQ,UAAU,KAAK,SAAS,UAAW,GAAM,MAAO,CAAG,CAAA,CAAA,EAC1E,EAGF,OAAIL,EACKC,EAIPG,EAACE,EAAA,CACC,QAAQ,YACR,UAAWC,EAAQ,CACjB,sBACA,kCAAA,CACD,EAEA,SAAAN,CAAA,CACH,CAEJ,EAEaO,EAAmBC,GAE5BL,EAACE,GAAK,QAAS,YAAc,GAAGG,EAC9B,SAAAP,EAACC,EAAS,CAAA,cAAY,yBACpB,SAAA,CAAAC,EAACC,GAAY,QAAS,UAAW,KAAK,SAAS,UAAW,GAAM,EAChED,EAACC,EAAY,CAAA,KAAK,QAAS,CAAA,EAC1BD,EAAAC,EAAA,CAAY,QAAS,QAAS,KAAK,SAAS,EAC7CD,EAACC,EAAY,CAAA,KAAK,QAAS,CAAA,EAC3BD,EAACC,EAAY,CAAA,KAAK,QAAS,CAAA,EAC3BD,EAACC,EAAY,CAAA,KAAK,QAAS,CAAA,EAC3BD,EAACC,EAAY,CAAA,KAAK,QAAS,CAAA,CAAA,CAAA,CAC7B,CACF,CAAA,EAISK,EAA2B,IAEpCR,EAACC,EAAA,CACC,cAAY,8BACZ,MAAO,CAAE,oBAAqB,KAAM,EAEpC,SAAA,CAAAC,EAACC,GAAY,QAAQ,UAAU,UAAW,GAAM,KAAK,SAAS,IAC7DM,EAAiB,EAAA,IACjBA,EAAiB,EAAA,IACjBA,EAAiB,EAAA,IACjBA,EAAiB,EAAA,IACjBA,EAAiB,CAAA,CAAA,CAAA,CAAA,CACpB,EAISC,EAAuB,IAEhCV,EAACC,EAAA,CACC,cAAY,sCACZ,UAAW,6BAEX,SAAA,CAAAC,EAACC,EAAY,CAAA,QAAQ,UAAU,KAAK,QAAQ,EAC3CD,EAAAC,EAAA,CAAY,QAAQ,QAAQ,KAAK,QAAQ,EACzCD,EAAAC,EAAA,CAAY,QAAQ,QAAQ,KAAK,QAAQ,EACzCD,EAAAC,EAAA,CAAY,QAAQ,QAAQ,KAAK,QAAQ,EAC1CD,EAACC,GAAY,QAAQ,UAAU,KAAK,QAAQ,UAAW,GAAM,MAAO,CAAG,CAAA,CAAA,CAAA,CACzE,EAISQ,EAAsB,IAE9BX,EAAAC,EAAA,CAAS,cAAY,wBAAwB,UAAU,eACtD,SAAA,CAAAC,EAACC,GAAY,QAAQ,QAAQ,KAAK,SAAS,UAAW,GAAM,EAC3DD,EAAAC,EAAA,CAAY,QAAQ,QAAQ,KAAK,SAAS,EAC1CD,EAAAC,EAAA,CAAY,QAAQ,QAAQ,KAAK,SAAS,EAC1CD,EAAAC,EAAA,CAAY,QAAQ,QAAQ,KAAK,SAAS,EAC1CD,EAAAC,EAAA,CAAY,QAAQ,QAAQ,KAAK,SAAS,EAC1CD,EAAAC,EAAA,CAAY,QAAQ,QAAQ,KAAK,SAAS,EAC1CD,EAAAC,EAAA,CAAY,KAAK,QAAQ,UAAW,GAAM,IAC1CA,EAAY,CAAA,QAAQ,UAAU,KAAK,SAAS,UAAW,EAAM,CAAA,CAAA,EAChE"}