{"version":3,"file":"getFormValues.js","sources":["/@dropins/storefront-order/src/types/form.types.ts","/@dropins/storefront-order/src/lib/getFormValues.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport enum FieldEnumList {\n  BOOLEAN = 'BOOLEAN',\n  DATE = 'DATE',\n  DATETIME = 'DATETIME',\n  DROPDOWN = 'DROPDOWN',\n  FILE = 'FILE',\n  GALLERY = 'GALLERY',\n  HIDDEN = 'HIDDEN',\n  IMAGE = 'IMAGE',\n  MEDIA_IMAGE = 'MEDIA_IMAGE',\n  MULTILINE = 'MULTILINE',\n  MULTISELECT = 'MULTISELECT',\n  PRICE = 'PRICE',\n  SELECT = 'SELECT',\n  TEXT = 'TEXT',\n  TEXTAREA = 'TEXTAREA',\n  UNDEFINED = 'UNDEFINED',\n  VISUAL = 'VISUAL',\n  WEIGHT = 'WEIGHT',\n  EMPTY = '',\n}\n\nexport interface FieldsProps {\n  className: string;\n  fieldType: FieldEnumList;\n  id: string;\n  code: string;\n  name: string;\n  defaultValue: string | boolean | number;\n  entityType: string;\n  required: boolean;\n  isUnique: boolean;\n  label: string;\n  orderNumber: number;\n  options?: { is_default?: boolean; label?: string; value?: string }[];\n}\n\nexport interface FormProps {\n  fieldsConfig?: FieldsProps[] | [];\n  name?: string;\n  className?: string;\n  children?: any;\n  loading?: boolean;\n  onSubmit?: (\n    event: SubmitEvent,\n    isValid: boolean\n  ) => Promise<void | null | undefined>;\n}\n\nexport interface useFormProps\n  extends Omit<FormProps, 'children' | 'className' | 'name'> {}\n\nexport type FormValues = Record<string, string | number | boolean | undefined>;\n\nexport interface FormInputsProps {\n  className?: string;\n  errors?: Record<string, string>;\n  values?: FormValues;\n  fields?: FieldsProps[];\n  loading?: boolean;\n  onChange?: (event: Event) => void;\n  onBlur?: (event: Event) => void;\n}\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const getFormValues = (form: HTMLFormElement) => {\n  if (!form) return null;\n\n  const formData = new FormData(form);\n\n  const checkboxes = form.querySelectorAll<HTMLInputElement>(\n    'input[type=\"checkbox\"]'\n  );\n  checkboxes.forEach((checkbox: HTMLInputElement) => {\n    if (!formData.has(checkbox.name)) {\n      formData.set(checkbox.name, 'false');\n    }\n    if (checkbox.checked) {\n      formData.set(checkbox.name, 'true');\n    }\n  });\n\n  if (formData && typeof formData.entries === 'function') {\n    const entries = formData.entries();\n    if (entries && typeof entries[Symbol.iterator] === 'function') {\n      return JSON.parse(JSON.stringify(Object.fromEntries(entries))) || {};\n    }\n  }\n\n  return {};\n};\n"],"names":["FieldEnumList","getFormValues","form","formData","checkbox","entries"],"mappings":"AAgBY,IAAAA,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,KAAO,OACPA,EAAA,SAAW,WACXA,EAAA,SAAW,WACXA,EAAA,KAAO,OACPA,EAAA,QAAU,UACVA,EAAA,OAAS,SACTA,EAAA,MAAQ,QACRA,EAAA,YAAc,cACdA,EAAA,UAAY,YACZA,EAAA,YAAc,cACdA,EAAA,MAAQ,QACRA,EAAA,OAAS,SACTA,EAAA,KAAO,OACPA,EAAA,SAAW,WACXA,EAAA,UAAY,YACZA,EAAA,OAAS,SACTA,EAAA,OAAS,SACTA,EAAA,MAAQ,GAnBEA,IAAAA,GAAA,CAAA,CAAA,ECAC,MAAAC,EAAiBC,GAA0B,CAClD,GAAA,CAACA,EAAa,OAAA,KAEZ,MAAAC,EAAW,IAAI,SAASD,CAAI,EAclC,GAZmBA,EAAK,iBACtB,wBACF,EACW,QAASE,GAA+B,CAC5CD,EAAS,IAAIC,EAAS,IAAI,GACpBD,EAAA,IAAIC,EAAS,KAAM,OAAO,EAEjCA,EAAS,SACFD,EAAA,IAAIC,EAAS,KAAM,MAAM,CACpC,CACD,EAEGD,GAAY,OAAOA,EAAS,SAAY,WAAY,CAChD,MAAAE,EAAUF,EAAS,QAAQ,EACjC,GAAIE,GAAW,OAAOA,EAAQ,OAAO,QAAQ,GAAM,WAC1C,OAAA,KAAK,MAAM,KAAK,UAAU,OAAO,YAAYA,CAAO,CAAC,CAAC,GAAK,CAAC,CACrE,CAGF,MAAO,CAAC,CACV"}