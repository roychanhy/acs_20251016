{"version":3,"file":"getGuestOrder.js","sources":["/@dropins/storefront-order/src/data/transforms/transform-customer.ts","/@dropins/storefront-order/src/api/getCustomer/graphql/getCustomer.graphql.ts","/@dropins/storefront-order/src/api/getCustomer/getCustomer.ts","/@dropins/storefront-order/src/api/getGuestOrder/graphql/getGuestOrder.graphql.ts","/@dropins/storefront-order/src/api/getGuestOrder/getGuestOrder.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { getCustomerShortResponse } from '@/order/types';\nimport { CustomerDataModelShort } from '../models';\n\nexport const transformCustomer = (\n  response: getCustomerShortResponse\n): CustomerDataModelShort => {\n  return {\n    email: response?.data?.customer?.email || '',\n    firstname: response?.data?.customer?.firstname || '',\n    lastname: response?.data?.customer?.lastname || '',\n  };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const GET_CUSTOMER = /* GraphQL */ `\n  query GET_CUSTOMER {\n    customer {\n      firstname\n      lastname\n      email\n    }\n  }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { handleNetworkError } from '@/order/lib/network-error';\nimport { fetchGraphQl } from '@/order/api/fetch-graphql';\nimport { handleFetchError } from '@/order/lib/fetch-error';\nimport { GET_CUSTOMER } from './graphql/getCustomer.graphql';\nimport { transformCustomer } from '@/order/data/transforms';\nimport { CustomerDataModelShort } from '@/order/data/models';\nimport { getCustomerShortResponse } from '@/order/types';\n\nexport const getCustomer = async (): Promise<CustomerDataModelShort> => {\n  return await fetchGraphQl(GET_CUSTOMER, {\n    method: 'GET',\n    cache: 'force-cache',\n  })\n    .then((response: getCustomerShortResponse) => {\n      if (response.errors?.length) return handleFetchError(response.errors);\n\n      return transformCustomer(response);\n    })\n    .catch(handleNetworkError);\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { GUEST_ORDER_FRAGMENT } from '@/order/api/fragments';\n\nexport const GET_GUEST_ORDER = /* GraphQL */ `\n  query GET_GUEST_ORDER($input: GuestOrderInformationInput!) {\n    guestOrder(input: $input) {\n      ...GUEST_ORDER_FRAGMENT\n    }\n  }\n  ${GUEST_ORDER_FRAGMENT}\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { fetchGraphQl } from '@/order/api/fetch-graphql';\nimport { handleNetworkError } from '@/order/lib/network-error';\nimport { GET_GUEST_ORDER } from './graphql/getGuestOrder.graphql';\nimport { GuestOrderResponse } from '@/order/types';\nimport { transformGuestOrder } from '@/order/data/transforms';\nimport { OrderDataModel } from '@/order/data/models';\nimport { handleFetchError } from '@/order/lib/fetch-error';\n\nexport const getGuestOrder = async (form: {\n  number: string;\n  email: string;\n  lastname: string;\n}): Promise<OrderDataModel | null> => {\n  return await fetchGraphQl(GET_GUEST_ORDER, {\n    method: 'GET',\n    cache: 'no-cache',\n    variables: {\n      input: form,\n    },\n  })\n    .then((response: GuestOrderResponse) => {\n      if (\n        response.errors?.length &&\n        response.errors[0].message === 'Please login to view the order.'\n      ) {\n        return handleFetchError(response.errors);\n      }\n\n      return transformGuestOrder(response);\n    })\n    .catch(handleNetworkError);\n};\n"],"names":["transformCustomer","response","_b","_a","_d","_c","_f","_e","GET_CUSTOMER","getCustomer","fetchGraphQl","handleFetchError","handleNetworkError","GET_GUEST_ORDER","GUEST_ORDER_FRAGMENT","getGuestOrder","form","transformGuestOrder"],"mappings":"gLAmBa,MAAAA,EACXC,GAC2B,iBACpB,MAAA,CACL,QAAOC,GAAAC,EAAAF,GAAA,YAAAA,EAAU,OAAV,YAAAE,EAAgB,WAAhB,YAAAD,EAA0B,QAAS,GAC1C,YAAWE,GAAAC,EAAAJ,GAAA,YAAAA,EAAU,OAAV,YAAAI,EAAgB,WAAhB,YAAAD,EAA0B,YAAa,GAClD,WAAUE,GAAAC,EAAAN,GAAA,YAAAA,EAAU,OAAV,YAAAM,EAAgB,WAAhB,YAAAD,EAA0B,WAAY,EAClD,CACF,ECXaE,EAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECQ7BC,EAAc,SAClB,MAAMC,EAAaF,EAAc,CACtC,OAAQ,MACR,MAAO,aAAA,CACR,EACE,KAAMP,GAAuC,OAC5C,OAAIE,EAAAF,EAAS,SAAT,MAAAE,EAAiB,OAAeQ,EAAiBV,EAAS,MAAM,EAE7DD,EAAkBC,CAAQ,CAAA,CAClC,EACA,MAAMW,CAAkB,EChBhBC,EAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMzCC,CAAoB;AAAA,ECAXC,EAAgB,MAAOC,GAK3B,MAAMN,EAAaG,EAAiB,CACzC,OAAQ,MACR,MAAO,WACP,UAAW,CACT,MAAOG,CAAA,CACT,CACD,EACE,KAAMf,GAAiC,OAEpC,OAAAE,EAAAF,EAAS,SAAT,MAAAE,EAAiB,QACjBF,EAAS,OAAO,CAAC,EAAE,UAAY,kCAExBU,EAAiBV,EAAS,MAAM,EAGlCgB,EAAoBhB,CAAQ,CAAA,CACpC,EACA,MAAMW,CAAkB"}