{"version":3,"file":"confirmCancelOrder.js","sources":["/@dropins/storefront-order/src/api/reorderItems/graphql/reorderItems.graphql.ts","/@dropins/storefront-order/src/api/reorderItems/reorderItems.ts","/@dropins/storefront-order/src/api/confirmGuestReturn/graphql/confirmGuestReturn.graphql.ts","/@dropins/storefront-order/src/api/confirmGuestReturn/confirmGuestReturn.ts","/@dropins/storefront-order/src/api/confirmCancelOrder/graphql/ConfirmCancelOrder.ts","/@dropins/storefront-order/src/api/confirmCancelOrder/confirmCancelOrder.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const REORDER_ITEMS_MUTATION = /* GraphQL */ `\n  mutation REORDER_ITEMS_MUTATION($orderNumber: String!) {\n    reorderItems(orderNumber: $orderNumber) {\n      cart {\n        itemsV2 {\n          items {\n            uid\n          }\n        }\n      }\n      userInputErrors {\n        code\n        message\n        path\n      }\n    }\n  }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { handleNetworkError } from '@/order/lib/network-error';\nimport { fetchGraphQl } from '@/order/api/fetch-graphql';\nimport { handleFetchError } from '@/order/lib/fetch-error';\nimport { REORDER_ITEMS_MUTATION } from './graphql/reorderItems.graphql';\nimport {\n  ReorderItemsProps,\n  ReorderItemsResponse,\n} from '@/order/types/api/reorderItems.types';\n\nexport const reorderItems = async (\n  orderNumber: string\n): Promise<ReorderItemsProps> => {\n  return await fetchGraphQl(REORDER_ITEMS_MUTATION, {\n    method: 'POST',\n    variables: { orderNumber },\n  })\n    .then((response: ReorderItemsResponse) => {\n      if (response.errors?.length) return handleFetchError(response.errors);\n\n      const success =\n        !!response?.data?.reorderItems?.cart?.itemsV2.items.length;\n      const userInputErrors =\n        response?.data?.reorderItems?.userInputErrors ?? [];\n\n      return { success, userInputErrors };\n    })\n    .catch(handleNetworkError);\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport {\n  GUEST_ORDER_FRAGMENT,\n  REQUEST_RETURN_ORDER_FRAGMENT,\n} from '@/order/api/fragments';\n\nexport const CONFIRM_RETURN_GUEST_ORDER = /* GraphQL */ `\n  mutation CONFIRM_RETURN_GUEST_ORDER(\n    $orderId: ID!\n    $confirmationKey: String!\n  ) {\n    confirmReturn(\n      input: { order_id: $orderId, confirmation_key: $confirmationKey }\n    ) {\n      return {\n        ...REQUEST_RETURN_ORDER_FRAGMENT\n        order {\n          ...GUEST_ORDER_FRAGMENT\n        }\n      }\n    }\n  }\n  ${REQUEST_RETURN_ORDER_FRAGMENT}\n  ${GUEST_ORDER_FRAGMENT}\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { fetchGraphQl } from '@/order/api';\nimport { handleFetchError } from '@/order/lib/fetch-error';\nimport { handleNetworkError } from '@/order/lib/network-error';\nimport { CONFIRM_RETURN_GUEST_ORDER } from './graphql/confirmGuestReturn.graphql';\nimport { GuestConfirmReturnResponse } from '@/order/types';\nimport { transformOrderData } from '@/order/data/transforms';\nimport { events } from '@adobe-commerce/event-bus';\nimport { OrderDataModel } from '@/order/data/models';\n\nexport const confirmGuestReturn = async (\n  orderId: string,\n  confirmationKey: string\n): Promise<OrderDataModel | null> => {\n  return await fetchGraphQl(CONFIRM_RETURN_GUEST_ORDER, {\n    method: 'POST',\n    variables: {\n      orderId,\n      confirmationKey,\n    },\n  })\n    .then((response: GuestConfirmReturnResponse) => {\n      if (response.errors?.length) {\n        return handleFetchError(response.errors);\n      }\n\n      if (response?.data?.confirmReturn?.return?.order) {\n        const transformOrder = transformOrderData(\n          // @ts-ignore\n          response?.data?.confirmReturn?.return?.order\n        );\n        events.emit('order/data', transformOrder);\n\n        return transformOrder;\n      }\n\n      return null;\n    })\n    .catch(handleNetworkError);\n};\n","/********************************************************************\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { GUEST_ORDER_FRAGMENT } from '@/order/api/fragments';\n\nexport const CONFIRM_CANCEL_ORDER_MUTATION = /* GraphQL */ `\n  mutation CONFIRM_CANCEL_ORDER_MUTATION(\n    $orderId: ID!\n    $confirmationKey: String!\n  ) {\n    confirmCancelOrder(\n      input: { order_id: $orderId, confirmation_key: $confirmationKey }\n    ) {\n      order {\n        ...GUEST_ORDER_FRAGMENT\n      }\n      errorV2 {\n        message\n        code\n      }\n    }\n  }\n  ${GUEST_ORDER_FRAGMENT}\n`;\n","/********************************************************************\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { CONFIRM_CANCEL_ORDER_MUTATION } from '@/order/api/confirmCancelOrder/graphql/ConfirmCancelOrder';\nimport { events } from '@adobe-commerce/event-bus';\nimport { fetchGraphQl } from '@/order/api';\nimport { handleFetchError } from '@/order/lib/fetch-error';\nimport { OrderDataModel } from '@/order/data/models';\nimport { transformOrderData } from '@/order/data/transforms';\n\nexport const confirmCancelOrder = async (\n  orderId: string,\n  confirmationKey: string\n) => {\n  return fetchGraphQl(CONFIRM_CANCEL_ORDER_MUTATION, {\n    variables: {\n      orderId,\n      confirmationKey,\n    },\n  }).then(async ({ errors, data }) => {\n    const _errors = [\n      ...(data?.confirmCancelOrder?.errorV2\n        ? [data?.confirmCancelOrder?.errorV2]\n        : []),\n      ...(errors ?? []),\n    ];\n\n    let payload: OrderDataModel | null = null;\n\n    if (data?.confirmCancelOrder?.order) {\n      payload = transformOrderData(data?.confirmCancelOrder?.order);\n      events.emit('order/data', payload as OrderDataModel);\n    }\n\n    if (_errors.length > 0) {\n      return handleFetchError(_errors);\n    }\n\n    return payload;\n  });\n};\n"],"names":["REORDER_ITEMS_MUTATION","reorderItems","orderNumber","fetchGraphQl","response","_a","handleFetchError","success","_d","_c","_b","userInputErrors","_f","_e","handleNetworkError","CONFIRM_RETURN_GUEST_ORDER","REQUEST_RETURN_ORDER_FRAGMENT","GUEST_ORDER_FRAGMENT","confirmGuestReturn","orderId","confirmationKey","transformOrder","transformOrderData","_g","events","CONFIRM_CANCEL_ORDER_MUTATION","confirmCancelOrder","errors","data","_errors","payload"],"mappings":"mQAgBa,MAAAA,EAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECSvCC,EAAe,MAC1BC,GAEO,MAAMC,EAAaH,EAAwB,CAChD,OAAQ,OACR,UAAW,CAAE,YAAAE,CAAY,CAAA,CAC1B,EACE,KAAME,GAAmC,iBACxC,IAAIC,EAAAD,EAAS,SAAT,MAAAC,EAAiB,OAAe,OAAAC,EAAiBF,EAAS,MAAM,EAE9D,MAAAG,EACJ,CAAC,GAACC,GAAAC,GAAAC,EAAAN,GAAA,YAAAA,EAAU,OAAV,YAAAM,EAAgB,eAAhB,YAAAD,EAA8B,OAA9B,MAAAD,EAAoC,QAAQ,MAAM,QAChDG,IACJC,GAAAC,EAAAT,GAAA,YAAAA,EAAU,OAAV,YAAAS,EAAgB,eAAhB,YAAAD,EAA8B,kBAAmB,CAAC,EAE7C,MAAA,CAAE,QAAAL,EAAS,gBAAAI,CAAgB,CAAA,CACnC,EACA,MAAMG,CAAkB,ECrBhBC,EAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgBpDC,CAA6B;AAAA,IAC7BC,CAAoB;AAAA,ECbXC,EAAqB,MAChCC,EACAC,IAEO,MAAMjB,EAAaY,EAA4B,CACpD,OAAQ,OACR,UAAW,CACT,QAAAI,EACA,gBAAAC,CAAA,CACF,CACD,EACE,KAAMhB,GAAyC,mBAC1C,IAAAC,EAAAD,EAAS,SAAT,MAAAC,EAAiB,OACZ,OAAAC,EAAiBF,EAAS,MAAM,EAGzC,IAAII,GAAAC,GAAAC,EAAAN,GAAA,YAAAA,EAAU,OAAV,YAAAM,EAAgB,gBAAhB,YAAAD,EAA+B,SAA/B,MAAAD,EAAuC,MAAO,CAChD,MAAMa,EAAiBC,GAErBC,GAAAX,GAAAC,EAAAT,GAAA,YAAAA,EAAU,OAAV,YAAAS,EAAgB,gBAAhB,YAAAD,EAA+B,SAA/B,YAAAW,EAAuC,KACzC,EACO,OAAAC,EAAA,KAAK,aAAcH,CAAc,EAEjCA,CAAA,CAGF,OAAA,IAAA,CACR,EACA,MAAMP,CAAkB,ECpChBW,EAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAiBvDR,CAAoB;AAAA,ECZXS,EAAqB,MAChCP,EACAC,IAEOjB,EAAasB,EAA+B,CACjD,UAAW,CACT,QAAAN,EACA,gBAAAC,CAAA,CAEH,CAAA,EAAE,KAAK,MAAO,CAAE,OAAAO,EAAQ,KAAAC,KAAW,aAClC,MAAMC,EAAU,CACd,IAAIxB,EAAAuB,GAAA,YAAAA,EAAM,qBAAN,MAAAvB,EAA0B,QAC1B,EAACK,EAAAkB,GAAA,YAAAA,EAAM,qBAAN,YAAAlB,EAA0B,OAAO,EAClC,CAAC,EACL,GAAIiB,GAAU,CAAA,CAChB,EAEA,IAAIG,EAAiC,KAOjC,OALArB,EAAAmB,GAAA,YAAAA,EAAM,qBAAN,MAAAnB,EAA0B,QAClBqB,EAAAR,GAAmBd,EAAAoB,GAAA,YAAAA,EAAM,qBAAN,YAAApB,EAA0B,KAAK,EACrDgB,EAAA,KAAK,aAAcM,CAAyB,GAGjDD,EAAQ,OAAS,EACZvB,EAAiBuB,CAAO,EAG1BC,CAAA,CACR"}