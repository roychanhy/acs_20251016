{"version":3,"file":"updateCustomer.js","sources":["/@dropins/storefront-account/src/data/transforms/transform-customer.ts","/@dropins/storefront-account/src/api/getCustomer/graphql/getCustomer.graphql.ts","/@dropins/storefront-account/src/api/getCustomer/getCustomer.ts","/@dropins/storefront-account/src/api/updateCustomerPassword/graphql/updateCustomerPassword.graphql.ts","/@dropins/storefront-account/src/api/updateCustomerPassword/updateCustomerPassword.ts","/@dropins/storefront-account/src/api/updateCustomerEmail/graphql/updateCustomerEmail.graphql.ts","/@dropins/storefront-account/src/api/updateCustomerEmail/updateCustomerEmail.ts","/@dropins/storefront-account/src/api/updateCustomer/graphql/updateCustomer.graphql.ts","/@dropins/storefront-account/src/api/updateCustomer/updateCustomer.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { getCustomerShortResponse } from '@/account/types';\nimport { CustomerDataModelShort } from '../models/customer';\nimport { convertToCamelCase } from '@/account/lib/convertCase';\nimport { config } from '@/account/api';\nimport { merge } from '@adobe-commerce/elsie/lib';\n\nexport const transformCustomer = (\n  response: getCustomerShortResponse\n): CustomerDataModelShort => {\n  const attributeList = response?.data?.customer?.custom_attributes\n    ?.filter((el) => el)\n    .reduce(\n      (\n        accumulator: Record<string, string | number | boolean>,\n        currentValue\n      ) => {\n        accumulator[convertToCamelCase(currentValue.code as string)] =\n          currentValue.value ?? '';\n        return accumulator;\n      },\n      {} as Record<string, string | number | boolean>\n    );\n\n  const model = {\n    email: response?.data?.customer?.email || '',\n    firstName: response?.data?.customer?.firstname || '',\n    lastName: response?.data?.customer?.lastname || '',\n    middleName: response?.data?.customer?.middlename || '',\n    gender: response?.data?.customer?.gender || '1',\n    dateOfBirth: response?.data?.customer?.date_of_birth || '',\n    prefix: response?.data?.customer?.prefix || '',\n    suffix: response?.data?.customer?.suffix || '',\n    createdAt: response?.data?.customer?.created_at || '',\n    ...attributeList,\n  };\n\n  return merge(\n    model, // default transformer\n    config\n      ?.getConfig()\n      ?.models?.CustomerDataModelShort?.transformer?.(response.data) // custom transformer\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { BASIC_CUSTOMER_INFO_FRAGMENT } from '@/account/api/graphql/CustomerFragment.graphql';\n\nexport const GET_CUSTOMER = /* GraphQL */ `\n  query GET_CUSTOMER {\n    customer {\n      ...BASIC_CUSTOMER_INFO_FRAGMENT\n      custom_attributes {\n        ... on AttributeValue {\n          code\n          value\n        }\n        code\n      }\n    }\n  }\n  ${BASIC_CUSTOMER_INFO_FRAGMENT}\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { handleNetworkError } from '@/account/lib/network-error';\nimport { fetchGraphQl } from '@/account/api/fetch-graphql';\nimport { handleFetchError } from '@/account/lib/fetch-error';\nimport { GET_CUSTOMER } from './graphql/getCustomer.graphql';\nimport { transformCustomer } from '@/account/data/transforms';\nimport { CustomerDataModelShort } from '@/account/data/models/customer';\nimport { getCustomerShortResponse } from '@/account/types';\n\nexport const getCustomer = async (): Promise<CustomerDataModelShort> => {\n  return await fetchGraphQl(GET_CUSTOMER, {\n    method: 'GET',\n    cache: 'no-cache',\n  })\n    .then((response: getCustomerShortResponse) => {\n      if (response.errors?.length) return handleFetchError(response.errors);\n\n      return transformCustomer(response);\n    })\n    .catch(handleNetworkError);\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const CHANGE_CUSTOMER_PASSWORD = /* GraphQL */ `\n  mutation CHANGE_CUSTOMER_PASSWORD(\n    $currentPassword: String!\n    $newPassword: String!\n  ) {\n    changeCustomerPassword(\n      currentPassword: $currentPassword\n      newPassword: $newPassword\n    ) {\n      email\n    }\n  }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { fetchGraphQl } from '../fetch-graphql';\nimport { handleNetworkError } from '@/account/lib/network-error';\nimport { handleFetchError } from '@/account/lib/fetch-error';\nimport {\n  ChangeCustomerPasswordProps,\n  ChangeCustomerPasswordResponse,\n} from '@/account/types';\nimport { CHANGE_CUSTOMER_PASSWORD } from './graphql/updateCustomerPassword.graphql';\n\nexport const updateCustomerPassword = async ({\n  currentPassword,\n  newPassword,\n}: ChangeCustomerPasswordProps): Promise<string> => {\n  return await fetchGraphQl(CHANGE_CUSTOMER_PASSWORD, {\n    method: 'POST',\n    variables: { currentPassword, newPassword },\n  })\n    .then((response: ChangeCustomerPasswordResponse) => {\n      if (response.errors?.length) return handleFetchError(response.errors);\n\n      return response?.data?.changeCustomerPassword?.email || '';\n    })\n    .catch(handleNetworkError);\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const UPDATE_CUSTOMER_EMAIL = /* GraphQL */ `\n  mutation UPDATE_CUSTOMER_EMAIL($email: String!, $password: String!) {\n    updateCustomerEmail(email: $email, password: $password) {\n      customer {\n        email\n      }\n    }\n  }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { fetchGraphQl } from '../fetch-graphql';\nimport { UPDATE_CUSTOMER_EMAIL } from './graphql/updateCustomerEmail.graphql';\nimport { handleNetworkError } from '@/account/lib/network-error';\nimport { handleFetchError } from '@/account/lib/fetch-error';\n\nexport const updateCustomerEmail = async ({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}): Promise<string> => {\n  return await fetchGraphQl(UPDATE_CUSTOMER_EMAIL, {\n    method: 'POST',\n    variables: { email, password },\n  })\n    .then((response) => {\n      if (response.errors?.length) return handleFetchError(response.errors);\n\n      return response?.data?.updateCustomerEmail?.customer?.email || '';\n    })\n    .catch(handleNetworkError);\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const UPDATE_CUSTOMER_V2 = /* GraphQL */ `\n  mutation UPDATE_CUSTOMER_V2($input: CustomerUpdateInput!) {\n    updateCustomerV2(input: $input) {\n      customer {\n        email\n      }\n    }\n  }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { fetchGraphQl } from '../fetch-graphql';\nimport { UPDATE_CUSTOMER_V2 } from './graphql/updateCustomer.graphql';\nimport { handleNetworkError } from '@/account/lib/network-error';\nimport { handleFetchError } from '@/account/lib/fetch-error';\nimport { convertKeysCase } from '@/account/lib/convertCase';\n\nexport const updateCustomer = async (\n  form: Record<string, string>\n): Promise<string> => {\n  return await fetchGraphQl(UPDATE_CUSTOMER_V2, {\n    method: 'POST',\n    variables: {\n      input: convertKeysCase(form, 'snakeCase', {\n        firstName: 'firstname',\n        lastName: 'lastname',\n        middleName: 'middlename',\n        dob: 'date_of_birth',\n        custom_attributesV2: 'custom_attributes',\n      }),\n    },\n  })\n    .then((response) => {\n      if (response.errors?.length) return handleFetchError(response.errors);\n\n      return response?.data?.updateCustomerV2?.customer?.email || '';\n    })\n    .catch(handleNetworkError);\n};\n"],"names":["transformCustomer","response","attributeList","_c","_b","_a","el","accumulator","currentValue","convertToCamelCase","model","_e","_d","_g","_f","_i","_h","_k","_j","_m","_l","_o","_n","_q","_p","_s","_r","_u","_t","merge","_z","_y","_x","_w","_v","config","GET_CUSTOMER","BASIC_CUSTOMER_INFO_FRAGMENT","getCustomer","fetchGraphQl","handleFetchError","handleNetworkError","CHANGE_CUSTOMER_PASSWORD","updateCustomerPassword","currentPassword","newPassword","UPDATE_CUSTOMER_EMAIL","updateCustomerEmail","email","password","UPDATE_CUSTOMER_V2","updateCustomer","form","convertKeysCase"],"mappings":"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"}