{"version":3,"file":"SortBy.js","sources":["/@dropins/storefront-product-discovery/src/containers/SortBy/SortBy.tsx"],"sourcesContent":["/********************************************************************\n *  Copyright 2025 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  Adobe permits you to use, modify, and distribute this \n * file in accordance with the terms of the Adobe license agreement \n * accompanying it. \n *******************************************************************/\n\nimport { HTMLAttributes, useState, useEffect } from 'preact/compat';\nimport { Container } from '@adobe-commerce/elsie/lib';\nimport { Picker } from '@adobe-commerce/elsie/components';\nimport { events } from '@adobe-commerce/event-bus';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { Scope, SearchVariables, SortOrder } from '@/plp/data/models';\nimport { search } from '@/plp/api';\n\nexport interface SortByProps extends HTMLAttributes<HTMLDivElement> {\n  scope?: Scope;\n  onSortChange?: (value: SortOrder | null) => void;\n}\n\nexport const SortBy: Container<SortByProps> = ({ scope, onSortChange }) => {\n  const labels = useText({\n    sortLabel: 'Search.SortBy.title',\n    lowToHigh: 'Search.SortBy.lowToHigh',\n    highToLow: 'Search.SortBy.highToLow',\n  });\n\n\n  const [sortOptions, setSortOptions] = useState<any[]>([]);\n  const [current, setCurrent] = useState('relevance_DESC');\n  const [currentSearchVariables, setCurrentSearchVariables] = useState<SearchVariables>({});\n\n  useEffect(() => {\n    // Listen for search results\n    const searchEvent = events.on('search/result', (payload) => {\n      setCurrentSearchVariables(payload.request);\n\n      // Configure sort options from metadata\n      if (payload.result?.metadata?.sortableAttributes) {\n        setSortOptions([...payload.result.metadata.sortableAttributes]);\n\n        // Set current sort value from request\n        if (payload.request.sort) {\n          const sortValue = getSortValue(payload.request.sort);\n\n          if (sortValue) {\n            setCurrent(sortValue);\n          }\n        }\n      }\n    }, { eager: true, scope });\n\n    return () => {\n      searchEvent?.off();\n    };\n  }, []);\n\n  const handleSortChange = async (value: SortOrder[]): Promise<void> => {\n    onSortChange?.(value[0]!);\n\n    search({ ...currentSearchVariables, sort: value, currentPage: 1 }, { scope });\n  };\n\n  return (\n    <Picker\n      required\n      floatingLabel={labels.sortLabel}\n      {...getSortOptions(sortOptions, labels)}\n      value={current}\n      handleSelect={(event) => {\n        const { value } = event.target as HTMLSelectElement;\n        const next = getSortSearchVariables(value);\n        handleSortChange(next);\n      }}\n    />\n  );\n};\n\n/** Utility functions */\n\nfunction getSortOptions(sortOptions: any, labels: any): any {\n  // if sortOption is bidirectional, then we need to add two options: lowToHigh and highToLow\n  const options: any[] = [];\n  \n  sortOptions.forEach((option: any, index: number) => {\n    if (option.bidirectional) {\n      // Insert the two options at the current position\n      options.splice(index + options.length, 0,\n        { text: `${option.label}: ${labels.lowToHigh}`, value: `${option.attribute}_ASC` },\n        { text: `${option.label}: ${labels.highToLow}`, value: `${option.attribute}_DESC` }\n      );\n    } else {\n      // Add single option at the current position\n      options.splice(index + options.length, 0,\n        { text: option.label, value: `${option.attribute}_DESC` }\n      );\n    }\n  });\n\n  return { options };\n}\n\n\nfunction getSortSearchVariables(sortValue: string): SortOrder[] {\n  const index = sortValue.indexOf('_');\n  const newSort: SortOrder[] = [\n    {\n      attribute: sortValue.substring(0, index) as string,\n      direction: sortValue.substring(index + 1) === 'ASC' ? 'ASC' : 'DESC',\n    },\n  ];\n  return newSort;\n}\n\nfunction getSortValue(sort: SortOrder[]) {\n  if (sort.length > 0 && sort[0]) {\n    return `${sort[0].attribute}_${sort[0].direction}`;\n  }\n  return '';\n}\n"],"names":["SortBy","scope","onSortChange","labels","useText","sortOptions","setSortOptions","useState","current","setCurrent","currentSearchVariables","setCurrentSearchVariables","useEffect","searchEvent","events","payload","_b","_a","sortValue","getSortValue","handleSortChange","value","search","jsx","Picker","getSortOptions","event","next","getSortSearchVariables","options","option","index","sort"],"mappings":"ueAsBO,MAAMA,EAAiC,CAAC,CAAE,MAAAC,EAAO,aAAAC,KAAmB,CACzE,MAAMC,EAASC,EAAQ,CACrB,UAAW,sBACX,UAAW,0BACX,UAAW,yBAAA,CACZ,EAGK,CAACC,EAAaC,CAAc,EAAIC,EAAgB,CAAA,CAAE,EAClD,CAACC,EAASC,CAAU,EAAIF,EAAS,gBAAgB,EACjD,CAACG,EAAwBC,CAAyB,EAAIJ,EAA0B,CAAA,CAAE,EAExFK,EAAU,IAAM,CAEd,MAAMC,EAAcC,EAAO,GAAG,gBAAkBC,GAAY,SAI1D,GAHAJ,EAA0BI,EAAQ,OAAO,GAGrCC,GAAAC,EAAAF,EAAQ,SAAR,YAAAE,EAAgB,WAAhB,MAAAD,EAA0B,qBAC5BV,EAAe,CAAC,GAAGS,EAAQ,OAAO,SAAS,kBAAkB,CAAC,EAG1DA,EAAQ,QAAQ,MAAM,CACxB,MAAMG,EAAYC,EAAaJ,EAAQ,QAAQ,IAAI,EAE/CG,GACFT,EAAWS,CAAS,CAExB,CAEJ,EAAG,CAAE,MAAO,GAAM,MAAAjB,EAAO,EAEzB,MAAO,IAAM,CACXY,GAAA,MAAAA,EAAa,KACf,CACF,EAAG,CAAA,CAAE,EAEL,MAAMO,EAAmB,MAAOC,GAAsC,CACpEnB,GAAA,MAAAA,EAAemB,EAAM,CAAC,GAEtBC,EAAO,CAAE,GAAGZ,EAAwB,KAAMW,EAAO,YAAa,CAAA,EAAK,CAAE,MAAApB,EAAO,CAC9E,EAEA,OACEsB,EAACC,EAAA,CACC,SAAQ,GACR,cAAerB,EAAO,UACrB,GAAGsB,EAAepB,EAAaF,CAAM,EACtC,MAAOK,EACP,aAAekB,GAAU,CACvB,KAAM,CAAE,MAAAL,GAAUK,EAAM,OAClBC,EAAOC,EAAuBP,CAAK,EACzCD,EAAiBO,CAAI,CACvB,CAAA,CAAA,CAGN,EAIA,SAASF,EAAepB,EAAkBF,EAAkB,CAE1D,MAAM0B,EAAiB,CAAA,EAEvB,OAAAxB,EAAY,QAAQ,CAACyB,EAAaC,IAAkB,CAC9CD,EAAO,cAETD,EAAQ,OAAOE,EAAQF,EAAQ,OAAQ,EACrC,CAAE,KAAM,GAAGC,EAAO,KAAK,KAAK3B,EAAO,SAAS,GAAI,MAAO,GAAG2B,EAAO,SAAS,MAAA,EAC1E,CAAE,KAAM,GAAGA,EAAO,KAAK,KAAK3B,EAAO,SAAS,GAAI,MAAO,GAAG2B,EAAO,SAAS,OAAA,CAAQ,EAIpFD,EAAQ,OAAOE,EAAQF,EAAQ,OAAQ,EACrC,CAAE,KAAMC,EAAO,MAAO,MAAO,GAAGA,EAAO,SAAS,OAAA,CAAQ,CAG9D,CAAC,EAEM,CAAE,QAAAD,CAAA,CACX,CAGA,SAASD,EAAuBV,EAAgC,CAC9D,MAAMa,EAAQb,EAAU,QAAQ,GAAG,EAOnC,MAN6B,CAC3B,CACE,UAAWA,EAAU,UAAU,EAAGa,CAAK,EACvC,UAAWb,EAAU,UAAUa,EAAQ,CAAC,IAAM,MAAQ,MAAQ,MAAA,CAChE,CAGJ,CAEA,SAASZ,EAAaa,EAAmB,CACvC,OAAIA,EAAK,OAAS,GAAKA,EAAK,CAAC,EACpB,GAAGA,EAAK,CAAC,EAAE,SAAS,IAAIA,EAAK,CAAC,EAAE,SAAS,GAE3C,EACT"}